//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_Contents_Catalogs", "Catalogs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Data.Catalog), "Contents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.Content), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_ContentRights_Contents", "Contents", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Data.Content), "ContentRights", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.ContentRight), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_Users_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Data.Role), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.User), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "ContentRightTerritories", "ContentRights", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.ContentRight), "Territories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.Territory))]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "ContentTags", "Contents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.Content), "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.Tag))]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_Users_Invitations", "Invitation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SongSearch.Web.Data.Invitation), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.User), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "CartContents", "Content", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.Content), "Cart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.Cart))]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_Carts_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Data.User), "Cart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.Cart), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_UsersCatalogs_Catalogs", "Catalog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Data.Catalog), "UserCatalogRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.UserCatalogRole), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_UsersCatalogs_Roles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Data.Role), "UserCatalogRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.UserCatalogRole), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_UsersCatalogs_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Data.User), "UserCatalogRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.UserCatalogRole), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_Users_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SongSearch.Web.Data.User), "User1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.User), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_Catalogs_Creators", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Data.User), "Catalog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.Catalog), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "SiteProfilesContacts", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.Contact), "SiteProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.SiteProfile))]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "UsersContacts", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.Contact), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.User))]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_Subscriptions_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Data.User), "Subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.Subscription), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_Users_PlanUsers", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Data.User), "User1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.User), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_Subscriptions_PricingPlans", "PricingPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Data.PricingPlan), "Subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.Subscription), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_Users_PricingPlans", "PricingPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Data.PricingPlan), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.User), true)]
[assembly: EdmRelationshipAttribute("SongSearch.Web.Data.Model", "FK_ContentMedia_Contents", "Content", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Data.Content), "ContentMedia", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Data.ContentMedia), true)]

#endregion

namespace SongSearch.Web.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SongSearchContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SongSearchContext object using the connection string found in the 'SongSearchContext' section of the application configuration file.
        /// </summary>
        public SongSearchContext() : base("name=SongSearchContext", "SongSearchContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SongSearchContext object.
        /// </summary>
        public SongSearchContext(string connectionString) : base(connectionString, "SongSearchContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SongSearchContext object.
        /// </summary>
        public SongSearchContext(EntityConnection connection) : base(connection, "SongSearchContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cart> Carts
        {
            get
            {
                if ((_Carts == null))
                {
                    _Carts = base.CreateObjectSet<Cart>("Carts");
                }
                return _Carts;
            }
        }
        private ObjectSet<Cart> _Carts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Catalog> Catalogs
        {
            get
            {
                if ((_Catalogs == null))
                {
                    _Catalogs = base.CreateObjectSet<Catalog>("Catalogs");
                }
                return _Catalogs;
            }
        }
        private ObjectSet<Catalog> _Catalogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentRight> ContentRights
        {
            get
            {
                if ((_ContentRights == null))
                {
                    _ContentRights = base.CreateObjectSet<ContentRight>("ContentRights");
                }
                return _ContentRights;
            }
        }
        private ObjectSet<ContentRight> _ContentRights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Content> Contents
        {
            get
            {
                if ((_Contents == null))
                {
                    _Contents = base.CreateObjectSet<Content>("Contents");
                }
                return _Contents;
            }
        }
        private ObjectSet<Content> _Contents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Territory> Territories
        {
            get
            {
                if ((_Territories == null))
                {
                    _Territories = base.CreateObjectSet<Territory>("Territories");
                }
                return _Territories;
            }
        }
        private ObjectSet<Territory> _Territories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invitation> Invitations
        {
            get
            {
                if ((_Invitations == null))
                {
                    _Invitations = base.CreateObjectSet<Invitation>("Invitations");
                }
                return _Invitations;
            }
        }
        private ObjectSet<Invitation> _Invitations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserCatalogRole> UserCatalogRoles
        {
            get
            {
                if ((_UserCatalogRoles == null))
                {
                    _UserCatalogRoles = base.CreateObjectSet<UserCatalogRole>("UserCatalogRoles");
                }
                return _UserCatalogRoles;
            }
        }
        private ObjectSet<UserCatalogRole> _UserCatalogRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SearchProperty> SearchProperties
        {
            get
            {
                if ((_SearchProperties == null))
                {
                    _SearchProperties = base.CreateObjectSet<SearchProperty>("SearchProperties");
                }
                return _SearchProperties;
            }
        }
        private ObjectSet<SearchProperty> _SearchProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SiteProfile> SiteProfiles
        {
            get
            {
                if ((_SiteProfiles == null))
                {
                    _SiteProfiles = base.CreateObjectSet<SiteProfile>("SiteProfiles");
                }
                return _SiteProfiles;
            }
        }
        private ObjectSet<SiteProfile> _SiteProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subscription> Subscriptions
        {
            get
            {
                if ((_Subscriptions == null))
                {
                    _Subscriptions = base.CreateObjectSet<Subscription>("Subscriptions");
                }
                return _Subscriptions;
            }
        }
        private ObjectSet<Subscription> _Subscriptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PricingPlan> PricingPlans
        {
            get
            {
                if ((_PricingPlans == null))
                {
                    _PricingPlans = base.CreateObjectSet<PricingPlan>("PricingPlans");
                }
                return _PricingPlans;
            }
        }
        private ObjectSet<PricingPlan> _PricingPlans;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentMedia> ContentMedia
        {
            get
            {
                if ((_ContentMedia == null))
                {
                    _ContentMedia = base.CreateObjectSet<ContentMedia>("ContentMedia");
                }
                return _ContentMedia;
            }
        }
        private ObjectSet<ContentMedia> _ContentMedia;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Carts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarts(Cart cart)
        {
            base.AddObject("Carts", cart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Catalogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCatalogs(Catalog catalog)
        {
            base.AddObject("Catalogs", catalog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentRights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentRights(ContentRight contentRight)
        {
            base.AddObject("ContentRights", contentRight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContents(Content content)
        {
            base.AddObject("Contents", content);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Territories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTerritories(Territory territory)
        {
            base.AddObject("Territories", territory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invitations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvitations(Invitation invitation)
        {
            base.AddObject("Invitations", invitation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserCatalogRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserCatalogRoles(UserCatalogRole userCatalogRole)
        {
            base.AddObject("UserCatalogRoles", userCatalogRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SearchProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSearchProperties(SearchProperty searchProperty)
        {
            base.AddObject("SearchProperties", searchProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SiteProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSiteProfiles(SiteProfile siteProfile)
        {
            base.AddObject("SiteProfiles", siteProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subscriptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriptions(Subscription subscription)
        {
            base.AddObject("Subscriptions", subscription);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PricingPlans EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPricingPlans(PricingPlan pricingPlan)
        {
            base.AddObject("PricingPlans", pricingPlan);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentMedia EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentMedia(ContentMedia contentMedia)
        {
            base.AddObject("ContentMedia", contentMedia);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="Cart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cart object.
        /// </summary>
        /// <param name="cartId">Initial value of the CartId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="cartStatus">Initial value of the CartStatus property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="lastUpdatedOn">Initial value of the LastUpdatedOn property.</param>
        public static Cart CreateCart(global::System.Int32 cartId, global::System.Int32 userId, global::System.Int16 cartStatus, global::System.DateTime createdOn, global::System.DateTime lastUpdatedOn)
        {
            Cart cart = new Cart();
            cart.CartId = cartId;
            cart.UserId = userId;
            cart.CartStatus = cartStatus;
            cart.CreatedOn = createdOn;
            cart.LastUpdatedOn = lastUpdatedOn;
            return cart;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CartId
        {
            get
            {
                return _CartId;
            }
            set
            {
                if (_CartId != value)
                {
                    OnCartIdChanging(value);
                    ReportPropertyChanging("CartId");
                    _CartId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CartId");
                    OnCartIdChanged();
                }
            }
        }
        private global::System.Int32 _CartId;
        partial void OnCartIdChanging(global::System.Int32 value);
        partial void OnCartIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CartStatus
        {
            get
            {
                return _CartStatus;
            }
            set
            {
                OnCartStatusChanging(value);
                ReportPropertyChanging("CartStatus");
                _CartStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CartStatus");
                OnCartStatusChanged();
            }
        }
        private global::System.Int16 _CartStatus;
        partial void OnCartStatusChanging(global::System.Int16 value);
        partial void OnCartStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedOn
        {
            get
            {
                return _LastUpdatedOn;
            }
            set
            {
                OnLastUpdatedOnChanging(value);
                ReportPropertyChanging("LastUpdatedOn");
                _LastUpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedOn");
                OnLastUpdatedOnChanged();
            }
        }
        private global::System.DateTime _LastUpdatedOn;
        partial void OnLastUpdatedOnChanging(global::System.DateTime value);
        partial void OnLastUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberItems
        {
            get
            {
                return _NumberItems;
            }
            set
            {
                OnNumberItemsChanging(value);
                ReportPropertyChanging("NumberItems");
                _NumberItems = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberItems");
                OnNumberItemsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberItems;
        partial void OnNumberItemsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberItemsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CompressedSize
        {
            get
            {
                return _CompressedSize;
            }
            set
            {
                OnCompressedSizeChanging(value);
                ReportPropertyChanging("CompressedSize");
                _CompressedSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompressedSize");
                OnCompressedSizeChanged();
            }
        }
        private Nullable<global::System.Decimal> _CompressedSize;
        partial void OnCompressedSizeChanging(Nullable<global::System.Decimal> value);
        partial void OnCompressedSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArchiveName
        {
            get
            {
                return _ArchiveName;
            }
            set
            {
                OnArchiveNameChanging(value);
                ReportPropertyChanging("ArchiveName");
                _ArchiveName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ArchiveName");
                OnArchiveNameChanged();
            }
        }
        private global::System.String _ArchiveName;
        partial void OnArchiveNameChanging(global::System.String value);
        partial void OnArchiveNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLastProcessed
        {
            get
            {
                return _IsLastProcessed;
            }
            set
            {
                OnIsLastProcessedChanging(value);
                ReportPropertyChanging("IsLastProcessed");
                _IsLastProcessed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLastProcessed");
                OnIsLastProcessedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLastProcessed;
        partial void OnIsLastProcessedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLastProcessedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "CartContents", "Content")]
        public EntityCollection<Content> Contents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Content>("SongSearch.Web.Data.Model.CartContents", "Content");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Content>("SongSearch.Web.Data.Model.CartContents", "Content", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Carts_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Carts_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Carts_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Carts_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SongSearch.Web.Data.Model.FK_Carts_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="Catalog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Catalog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Catalog object.
        /// </summary>
        /// <param name="catalogId">Initial value of the CatalogId property.</param>
        /// <param name="catalogName">Initial value of the CatalogName property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static Catalog CreateCatalog(global::System.Int32 catalogId, global::System.String catalogName, global::System.Int32 createdByUserId, global::System.DateTime createdOn)
        {
            Catalog catalog = new Catalog();
            catalog.CatalogId = catalogId;
            catalog.CatalogName = catalogName;
            catalog.CreatedByUserId = createdByUserId;
            catalog.CreatedOn = createdOn;
            return catalog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CatalogId
        {
            get
            {
                return _CatalogId;
            }
            set
            {
                if (_CatalogId != value)
                {
                    OnCatalogIdChanging(value);
                    ReportPropertyChanging("CatalogId");
                    _CatalogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CatalogId");
                    OnCatalogIdChanged();
                }
            }
        }
        private global::System.Int32 _CatalogId;
        partial void OnCatalogIdChanging(global::System.Int32 value);
        partial void OnCatalogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CatalogName
        {
            get
            {
                return _CatalogName;
            }
            set
            {
                OnCatalogNameChanging(value);
                ReportPropertyChanging("CatalogName");
                _CatalogName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CatalogName");
                OnCatalogNameChanged();
            }
        }
        private global::System.String _CatalogName;
        partial void OnCatalogNameChanging(global::System.String value);
        partial void OnCatalogNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Contents_Catalogs", "Contents")]
        public EntityCollection<Content> Contents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Content>("SongSearch.Web.Data.Model.FK_Contents_Catalogs", "Contents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Content>("SongSearch.Web.Data.Model.FK_Contents_Catalogs", "Contents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_UsersCatalogs_Catalogs", "UserCatalogRole")]
        public EntityCollection<UserCatalogRole> UserCatalogRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCatalogRole>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Catalogs", "UserCatalogRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCatalogRole>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Catalogs", "UserCatalogRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Catalogs_Creators", "User")]
        public User Creator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Catalogs_Creators", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Catalogs_Creators", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Catalogs_Creators", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SongSearch.Web.Data.Model.FK_Catalogs_Creators", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="contactId">Initial value of the ContactId property.</param>
        /// <param name="isDefault">Initial value of the IsDefault property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static Contact CreateContact(global::System.Int32 contactId, global::System.Boolean isDefault, global::System.DateTime createdOn, global::System.Int32 createdByUserId)
        {
            Contact contact = new Contact();
            contact.ContactId = contactId;
            contact.IsDefault = isDefault;
            contact.CreatedOn = createdOn;
            contact.CreatedByUserId = createdByUserId;
            return contact;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                if (_ContactId != value)
                {
                    OnContactIdChanging(value);
                    ReportPropertyChanging("ContactId");
                    _ContactId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactId");
                    OnContactIdChanged();
                }
            }
        }
        private global::System.Int32 _ContactId;
        partial void OnContactIdChanging(global::System.Int32 value);
        partial void OnContactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateRegion
        {
            get
            {
                return _StateRegion;
            }
            set
            {
                OnStateRegionChanging(value);
                ReportPropertyChanging("StateRegion");
                _StateRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateRegion");
                OnStateRegionChanged();
            }
        }
        private global::System.String _StateRegion;
        partial void OnStateRegionChanging(global::System.String value);
        partial void OnStateRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone1
        {
            get
            {
                return _Phone1;
            }
            set
            {
                OnPhone1Changing(value);
                ReportPropertyChanging("Phone1");
                _Phone1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone1");
                OnPhone1Changed();
            }
        }
        private global::System.String _Phone1;
        partial void OnPhone1Changing(global::System.String value);
        partial void OnPhone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone2
        {
            get
            {
                return _Phone2;
            }
            set
            {
                OnPhone2Changing(value);
                ReportPropertyChanging("Phone2");
                _Phone2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone2");
                OnPhone2Changed();
            }
        }
        private global::System.String _Phone2;
        partial void OnPhone2Changing(global::System.String value);
        partial void OnPhone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdminEmail
        {
            get
            {
                return _AdminEmail;
            }
            set
            {
                OnAdminEmailChanging(value);
                ReportPropertyChanging("AdminEmail");
                _AdminEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdminEmail");
                OnAdminEmailChanged();
            }
        }
        private global::System.String _AdminEmail;
        partial void OnAdminEmailChanging(global::System.String value);
        partial void OnAdminEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private global::System.Boolean _IsDefault;
        partial void OnIsDefaultChanging(global::System.Boolean value);
        partial void OnIsDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "SiteProfilesContacts", "SiteProfile")]
        public EntityCollection<SiteProfile> SiteProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SiteProfile>("SongSearch.Web.Data.Model.SiteProfilesContacts", "SiteProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SiteProfile>("SongSearch.Web.Data.Model.SiteProfilesContacts", "SiteProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "UsersContacts", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SongSearch.Web.Data.Model.UsersContacts", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SongSearch.Web.Data.Model.UsersContacts", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="Content")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Content : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Content object.
        /// </summary>
        /// <param name="contentId">Initial value of the ContentId property.</param>
        /// <param name="catalogId">Initial value of the CatalogId property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="lastUpdatedByUserId">Initial value of the LastUpdatedByUserId property.</param>
        /// <param name="lastUpdatedOn">Initial value of the LastUpdatedOn property.</param>
        /// <param name="isControlledAllIn">Initial value of the IsControlledAllIn property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="artist">Initial value of the Artist property.</param>
        public static Content CreateContent(global::System.Int32 contentId, global::System.Int32 catalogId, global::System.Int32 createdByUserId, global::System.DateTime createdOn, global::System.Int32 lastUpdatedByUserId, global::System.DateTime lastUpdatedOn, global::System.Boolean isControlledAllIn, global::System.String title, global::System.String artist)
        {
            Content content = new Content();
            content.ContentId = contentId;
            content.CatalogId = catalogId;
            content.CreatedByUserId = createdByUserId;
            content.CreatedOn = createdOn;
            content.LastUpdatedByUserId = lastUpdatedByUserId;
            content.LastUpdatedOn = lastUpdatedOn;
            content.IsControlledAllIn = isControlledAllIn;
            content.Title = title;
            content.Artist = artist;
            return content;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentId
        {
            get
            {
                return _ContentId;
            }
            set
            {
                if (_ContentId != value)
                {
                    OnContentIdChanging(value);
                    ReportPropertyChanging("ContentId");
                    _ContentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentId");
                    OnContentIdChanged();
                }
            }
        }
        private global::System.Int32 _ContentId;
        partial void OnContentIdChanging(global::System.Int32 value);
        partial void OnContentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CatalogId
        {
            get
            {
                return _CatalogId;
            }
            set
            {
                OnCatalogIdChanging(value);
                ReportPropertyChanging("CatalogId");
                _CatalogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CatalogId");
                OnCatalogIdChanged();
            }
        }
        private global::System.Int32 _CatalogId;
        partial void OnCatalogIdChanging(global::System.Int32 value);
        partial void OnCatalogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private global::System.Int32 _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(global::System.Int32 value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedOn
        {
            get
            {
                return _LastUpdatedOn;
            }
            set
            {
                OnLastUpdatedOnChanging(value);
                ReportPropertyChanging("LastUpdatedOn");
                _LastUpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedOn");
                OnLastUpdatedOnChanged();
            }
        }
        private global::System.DateTime _LastUpdatedOn;
        partial void OnLastUpdatedOnChanging(global::System.DateTime value);
        partial void OnLastUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsControlledAllIn
        {
            get
            {
                return _IsControlledAllIn;
            }
            set
            {
                OnIsControlledAllInChanging(value);
                ReportPropertyChanging("IsControlledAllIn");
                _IsControlledAllIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsControlledAllIn");
                OnIsControlledAllInChanged();
            }
        }
        private global::System.Boolean _IsControlledAllIn;
        partial void OnIsControlledAllInChanging(global::System.Boolean value);
        partial void OnIsControlledAllInChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Artist
        {
            get
            {
                return _Artist;
            }
            set
            {
                OnArtistChanging(value);
                ReportPropertyChanging("Artist");
                _Artist = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Artist");
                OnArtistChanged();
            }
        }
        private global::System.String _Artist;
        partial void OnArtistChanging(global::System.String value);
        partial void OnArtistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Writers
        {
            get
            {
                return _Writers;
            }
            set
            {
                OnWritersChanging(value);
                ReportPropertyChanging("Writers");
                _Writers = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Writers");
                OnWritersChanged();
            }
        }
        private global::System.String _Writers;
        partial void OnWritersChanging(global::System.String value);
        partial void OnWritersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReleaseYear
        {
            get
            {
                return _ReleaseYear;
            }
            set
            {
                OnReleaseYearChanging(value);
                ReportPropertyChanging("ReleaseYear");
                _ReleaseYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReleaseYear");
                OnReleaseYearChanged();
            }
        }
        private Nullable<global::System.Int32> _ReleaseYear;
        partial void OnReleaseYearChanging(Nullable<global::System.Int32> value);
        partial void OnReleaseYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecordLabel
        {
            get
            {
                return _RecordLabel;
            }
            set
            {
                OnRecordLabelChanging(value);
                ReportPropertyChanging("RecordLabel");
                _RecordLabel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecordLabel");
                OnRecordLabelChanged();
            }
        }
        private global::System.String _RecordLabel;
        partial void OnRecordLabelChanging(global::System.String value);
        partial void OnRecordLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lyrics
        {
            get
            {
                return _Lyrics;
            }
            set
            {
                OnLyricsChanging(value);
                ReportPropertyChanging("Lyrics");
                _Lyrics = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Lyrics");
                OnLyricsChanged();
            }
        }
        private global::System.String _Lyrics;
        partial void OnLyricsChanging(global::System.String value);
        partial void OnLyricsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Keywords
        {
            get
            {
                return _Keywords;
            }
            set
            {
                OnKeywordsChanging(value);
                ReportPropertyChanging("Keywords");
                _Keywords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Keywords");
                OnKeywordsChanged();
            }
        }
        private global::System.String _Keywords;
        partial void OnKeywordsChanging(global::System.String value);
        partial void OnKeywordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SimilarSongs
        {
            get
            {
                return _SimilarSongs;
            }
            set
            {
                OnSimilarSongsChanging(value);
                ReportPropertyChanging("SimilarSongs");
                _SimilarSongs = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SimilarSongs");
                OnSimilarSongsChanged();
            }
        }
        private global::System.String _SimilarSongs;
        partial void OnSimilarSongsChanging(global::System.String value);
        partial void OnSimilarSongsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicensingNotes
        {
            get
            {
                return _LicensingNotes;
            }
            set
            {
                OnLicensingNotesChanging(value);
                ReportPropertyChanging("LicensingNotes");
                _LicensingNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LicensingNotes");
                OnLicensingNotesChanged();
            }
        }
        private global::System.String _LicensingNotes;
        partial void OnLicensingNotesChanging(global::System.String value);
        partial void OnLicensingNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Pop
        {
            get
            {
                return _Pop;
            }
            set
            {
                OnPopChanging(value);
                ReportPropertyChanging("Pop");
                _Pop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pop");
                OnPopChanged();
            }
        }
        private Nullable<global::System.Int32> _Pop;
        partial void OnPopChanging(Nullable<global::System.Int32> value);
        partial void OnPopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private Nullable<global::System.Int32> _Country;
        partial void OnCountryChanging(Nullable<global::System.Int32> value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LyricsIndex
        {
            get
            {
                return _LyricsIndex;
            }
            set
            {
                OnLyricsIndexChanging(value);
                ReportPropertyChanging("LyricsIndex");
                _LyricsIndex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LyricsIndex");
                OnLyricsIndexChanged();
            }
        }
        private global::System.String _LyricsIndex;
        partial void OnLyricsIndexChanging(global::System.String value);
        partial void OnLyricsIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SoundsLike
        {
            get
            {
                return _SoundsLike;
            }
            set
            {
                OnSoundsLikeChanging(value);
                ReportPropertyChanging("SoundsLike");
                _SoundsLike = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SoundsLike");
                OnSoundsLikeChanged();
            }
        }
        private global::System.String _SoundsLike;
        partial void OnSoundsLikeChanging(global::System.String value);
        partial void OnSoundsLikeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Instruments
        {
            get
            {
                return _Instruments;
            }
            set
            {
                OnInstrumentsChanging(value);
                ReportPropertyChanging("Instruments");
                _Instruments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Instruments");
                OnInstrumentsChanged();
            }
        }
        private global::System.String _Instruments;
        partial void OnInstrumentsChanging(global::System.String value);
        partial void OnInstrumentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Contents_Catalogs", "Catalogs")]
        public Catalog Catalog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catalog>("SongSearch.Web.Data.Model.FK_Contents_Catalogs", "Catalogs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catalog>("SongSearch.Web.Data.Model.FK_Contents_Catalogs", "Catalogs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Catalog> CatalogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catalog>("SongSearch.Web.Data.Model.FK_Contents_Catalogs", "Catalogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Catalog>("SongSearch.Web.Data.Model.FK_Contents_Catalogs", "Catalogs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_ContentRights_Contents", "ContentRights")]
        public EntityCollection<ContentRight> ContentRights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentRight>("SongSearch.Web.Data.Model.FK_ContentRights_Contents", "ContentRights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentRight>("SongSearch.Web.Data.Model.FK_ContentRights_Contents", "ContentRights", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "ContentTags", "Tags")]
        public EntityCollection<Tag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("SongSearch.Web.Data.Model.ContentTags", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("SongSearch.Web.Data.Model.ContentTags", "Tags", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "CartContents", "Cart")]
        public EntityCollection<Cart> Carts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cart>("SongSearch.Web.Data.Model.CartContents", "Cart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cart>("SongSearch.Web.Data.Model.CartContents", "Cart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_ContentMedia_Contents", "ContentMedia")]
        public EntityCollection<ContentMedia> ContentMedia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentMedia>("SongSearch.Web.Data.Model.FK_ContentMedia_Contents", "ContentMedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentMedia>("SongSearch.Web.Data.Model.FK_ContentMedia_Contents", "ContentMedia", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="ContentMedia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentMedia : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentMedia object.
        /// </summary>
        /// <param name="contentId">Initial value of the ContentId property.</param>
        /// <param name="mediaVersion">Initial value of the MediaVersion property.</param>
        /// <param name="mediaDate">Initial value of the MediaDate property.</param>
        /// <param name="isRemote">Initial value of the IsRemote property.</param>
        public static ContentMedia CreateContentMedia(global::System.Int32 contentId, global::System.Int32 mediaVersion, global::System.DateTime mediaDate, global::System.Boolean isRemote)
        {
            ContentMedia contentMedia = new ContentMedia();
            contentMedia.ContentId = contentId;
            contentMedia.MediaVersion = mediaVersion;
            contentMedia.MediaDate = mediaDate;
            contentMedia.IsRemote = isRemote;
            return contentMedia;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentId
        {
            get
            {
                return _ContentId;
            }
            set
            {
                if (_ContentId != value)
                {
                    OnContentIdChanging(value);
                    ReportPropertyChanging("ContentId");
                    _ContentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentId");
                    OnContentIdChanged();
                }
            }
        }
        private global::System.Int32 _ContentId;
        partial void OnContentIdChanging(global::System.Int32 value);
        partial void OnContentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MediaVersion
        {
            get
            {
                return _MediaVersion;
            }
            set
            {
                if (_MediaVersion != value)
                {
                    OnMediaVersionChanging(value);
                    ReportPropertyChanging("MediaVersion");
                    _MediaVersion = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MediaVersion");
                    OnMediaVersionChanged();
                }
            }
        }
        private global::System.Int32 _MediaVersion;
        partial void OnMediaVersionChanging(global::System.Int32 value);
        partial void OnMediaVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MediaDate
        {
            get
            {
                return _MediaDate;
            }
            set
            {
                OnMediaDateChanging(value);
                ReportPropertyChanging("MediaDate");
                _MediaDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MediaDate");
                OnMediaDateChanged();
            }
        }
        private global::System.DateTime _MediaDate;
        partial void OnMediaDateChanging(global::System.DateTime value);
        partial void OnMediaDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRemote
        {
            get
            {
                return _IsRemote;
            }
            set
            {
                OnIsRemoteChanging(value);
                ReportPropertyChanging("IsRemote");
                _IsRemote = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRemote");
                OnIsRemoteChanged();
            }
        }
        private global::System.Boolean _IsRemote;
        partial void OnIsRemoteChanging(global::System.Boolean value);
        partial void OnIsRemoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MediaType
        {
            get
            {
                return _MediaType;
            }
            set
            {
                OnMediaTypeChanging(value);
                ReportPropertyChanging("MediaType");
                _MediaType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MediaType");
                OnMediaTypeChanged();
            }
        }
        private global::System.String _MediaType;
        partial void OnMediaTypeChanging(global::System.String value);
        partial void OnMediaTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MediaBitRate
        {
            get
            {
                return _MediaBitRate;
            }
            set
            {
                OnMediaBitRateChanging(value);
                ReportPropertyChanging("MediaBitRate");
                _MediaBitRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MediaBitRate");
                OnMediaBitRateChanged();
            }
        }
        private Nullable<global::System.Int32> _MediaBitRate;
        partial void OnMediaBitRateChanging(Nullable<global::System.Int32> value);
        partial void OnMediaBitRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MediaSize
        {
            get
            {
                return _MediaSize;
            }
            set
            {
                OnMediaSizeChanging(value);
                ReportPropertyChanging("MediaSize");
                _MediaSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MediaSize");
                OnMediaSizeChanged();
            }
        }
        private Nullable<global::System.Int64> _MediaSize;
        partial void OnMediaSizeChanging(Nullable<global::System.Int64> value);
        partial void OnMediaSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MediaLength
        {
            get
            {
                return _MediaLength;
            }
            set
            {
                OnMediaLengthChanging(value);
                ReportPropertyChanging("MediaLength");
                _MediaLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MediaLength");
                OnMediaLengthChanged();
            }
        }
        private Nullable<global::System.Int64> _MediaLength;
        partial void OnMediaLengthChanging(Nullable<global::System.Int64> value);
        partial void OnMediaLengthChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_ContentMedia_Contents", "Content")]
        public Content Content
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SongSearch.Web.Data.Model.FK_ContentMedia_Contents", "Content").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SongSearch.Web.Data.Model.FK_ContentMedia_Contents", "Content").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Content> ContentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SongSearch.Web.Data.Model.FK_ContentMedia_Contents", "Content");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Content>("SongSearch.Web.Data.Model.FK_ContentMedia_Contents", "Content", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="ContentRight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentRight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentRight object.
        /// </summary>
        /// <param name="contentRightId">Initial value of the ContentRightId property.</param>
        /// <param name="contentId">Initial value of the ContentId property.</param>
        /// <param name="rightsTypeId">Initial value of the RightsTypeId property.</param>
        /// <param name="rightsHolderShare">Initial value of the RightsHolderShare property.</param>
        /// <param name="rightsHolderName">Initial value of the RightsHolderName property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static ContentRight CreateContentRight(global::System.Int32 contentRightId, global::System.Int32 contentId, global::System.Int32 rightsTypeId, global::System.Decimal rightsHolderShare, global::System.String rightsHolderName, global::System.Int32 createdByUserId, global::System.DateTime createdOn)
        {
            ContentRight contentRight = new ContentRight();
            contentRight.ContentRightId = contentRightId;
            contentRight.ContentId = contentId;
            contentRight.RightsTypeId = rightsTypeId;
            contentRight.RightsHolderShare = rightsHolderShare;
            contentRight.RightsHolderName = rightsHolderName;
            contentRight.CreatedByUserId = createdByUserId;
            contentRight.CreatedOn = createdOn;
            return contentRight;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentRightId
        {
            get
            {
                return _ContentRightId;
            }
            set
            {
                if (_ContentRightId != value)
                {
                    OnContentRightIdChanging(value);
                    ReportPropertyChanging("ContentRightId");
                    _ContentRightId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentRightId");
                    OnContentRightIdChanged();
                }
            }
        }
        private global::System.Int32 _ContentRightId;
        partial void OnContentRightIdChanging(global::System.Int32 value);
        partial void OnContentRightIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentId
        {
            get
            {
                return _ContentId;
            }
            set
            {
                OnContentIdChanging(value);
                ReportPropertyChanging("ContentId");
                _ContentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentId");
                OnContentIdChanged();
            }
        }
        private global::System.Int32 _ContentId;
        partial void OnContentIdChanging(global::System.Int32 value);
        partial void OnContentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RightsTypeId
        {
            get
            {
                return _RightsTypeId;
            }
            set
            {
                OnRightsTypeIdChanging(value);
                ReportPropertyChanging("RightsTypeId");
                _RightsTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RightsTypeId");
                OnRightsTypeIdChanged();
            }
        }
        private global::System.Int32 _RightsTypeId;
        partial void OnRightsTypeIdChanging(global::System.Int32 value);
        partial void OnRightsTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RightsHolderShare
        {
            get
            {
                return _RightsHolderShare;
            }
            set
            {
                OnRightsHolderShareChanging(value);
                ReportPropertyChanging("RightsHolderShare");
                _RightsHolderShare = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RightsHolderShare");
                OnRightsHolderShareChanged();
            }
        }
        private global::System.Decimal _RightsHolderShare;
        partial void OnRightsHolderShareChanging(global::System.Decimal value);
        partial void OnRightsHolderShareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RightsHolderName
        {
            get
            {
                return _RightsHolderName;
            }
            set
            {
                OnRightsHolderNameChanging(value);
                ReportPropertyChanging("RightsHolderName");
                _RightsHolderName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RightsHolderName");
                OnRightsHolderNameChanged();
            }
        }
        private global::System.String _RightsHolderName;
        partial void OnRightsHolderNameChanging(global::System.String value);
        partial void OnRightsHolderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_ContentRights_Contents", "Contents")]
        public Content Content
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SongSearch.Web.Data.Model.FK_ContentRights_Contents", "Contents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SongSearch.Web.Data.Model.FK_ContentRights_Contents", "Contents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Content> ContentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SongSearch.Web.Data.Model.FK_ContentRights_Contents", "Contents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Content>("SongSearch.Web.Data.Model.FK_ContentRights_Contents", "Contents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "ContentRightTerritories", "Territories")]
        public EntityCollection<Territory> Territories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Territory>("SongSearch.Web.Data.Model.ContentRightTerritories", "Territories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Territory>("SongSearch.Web.Data.Model.ContentRightTerritories", "Territories", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="Invitation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invitation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invitation object.
        /// </summary>
        /// <param name="invitationId">Initial value of the InvitationId property.</param>
        /// <param name="invitationEmailAddress">Initial value of the InvitationEmailAddress property.</param>
        /// <param name="expirationDate">Initial value of the ExpirationDate property.</param>
        /// <param name="invitationStatus">Initial value of the InvitationStatus property.</param>
        /// <param name="invitedByUserId">Initial value of the InvitedByUserId property.</param>
        /// <param name="isPlanInvitation">Initial value of the IsPlanInvitation property.</param>
        public static Invitation CreateInvitation(global::System.Guid invitationId, global::System.String invitationEmailAddress, global::System.DateTime expirationDate, global::System.Int16 invitationStatus, global::System.Int32 invitedByUserId, global::System.Boolean isPlanInvitation)
        {
            Invitation invitation = new Invitation();
            invitation.InvitationId = invitationId;
            invitation.InvitationEmailAddress = invitationEmailAddress;
            invitation.ExpirationDate = expirationDate;
            invitation.InvitationStatus = invitationStatus;
            invitation.InvitedByUserId = invitedByUserId;
            invitation.IsPlanInvitation = isPlanInvitation;
            return invitation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InvitationId
        {
            get
            {
                return _InvitationId;
            }
            set
            {
                if (_InvitationId != value)
                {
                    OnInvitationIdChanging(value);
                    ReportPropertyChanging("InvitationId");
                    _InvitationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvitationId");
                    OnInvitationIdChanged();
                }
            }
        }
        private global::System.Guid _InvitationId;
        partial void OnInvitationIdChanging(global::System.Guid value);
        partial void OnInvitationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvitationEmailAddress
        {
            get
            {
                return _InvitationEmailAddress;
            }
            set
            {
                OnInvitationEmailAddressChanging(value);
                ReportPropertyChanging("InvitationEmailAddress");
                _InvitationEmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvitationEmailAddress");
                OnInvitationEmailAddressChanged();
            }
        }
        private global::System.String _InvitationEmailAddress;
        partial void OnInvitationEmailAddressChanging(global::System.String value);
        partial void OnInvitationEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private global::System.DateTime _ExpirationDate;
        partial void OnExpirationDateChanging(global::System.DateTime value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 InvitationStatus
        {
            get
            {
                return _InvitationStatus;
            }
            set
            {
                OnInvitationStatusChanging(value);
                ReportPropertyChanging("InvitationStatus");
                _InvitationStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitationStatus");
                OnInvitationStatusChanged();
            }
        }
        private global::System.Int16 _InvitationStatus;
        partial void OnInvitationStatusChanging(global::System.Int16 value);
        partial void OnInvitationStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvitedByUserId
        {
            get
            {
                return _InvitedByUserId;
            }
            set
            {
                OnInvitedByUserIdChanging(value);
                ReportPropertyChanging("InvitedByUserId");
                _InvitedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitedByUserId");
                OnInvitedByUserIdChanged();
            }
        }
        private global::System.Int32 _InvitedByUserId;
        partial void OnInvitedByUserIdChanging(global::System.Int32 value);
        partial void OnInvitedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPlanInvitation
        {
            get
            {
                return _IsPlanInvitation;
            }
            set
            {
                OnIsPlanInvitationChanging(value);
                ReportPropertyChanging("IsPlanInvitation");
                _IsPlanInvitation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPlanInvitation");
                OnIsPlanInvitationChanged();
            }
        }
        private global::System.Boolean _IsPlanInvitation;
        partial void OnIsPlanInvitationChanging(global::System.Boolean value);
        partial void OnIsPlanInvitationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Users_Invitations", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SongSearch.Web.Data.Model.FK_Users_Invitations", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SongSearch.Web.Data.Model.FK_Users_Invitations", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="PricingPlan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PricingPlan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PricingPlan object.
        /// </summary>
        /// <param name="pricingPlanId">Initial value of the PricingPlanId property.</param>
        /// <param name="pricingPlanName">Initial value of the PricingPlanName property.</param>
        /// <param name="isPromo">Initial value of the IsPromo property.</param>
        /// <param name="isFeatured">Initial value of the IsFeatured property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        /// <param name="showOnSite">Initial value of the ShowOnSite property.</param>
        /// <param name="customContactUs">Initial value of the CustomContactUs property.</param>
        /// <param name="customSiteProfile">Initial value of the CustomSiteProfile property.</param>
        public static PricingPlan CreatePricingPlan(global::System.Int32 pricingPlanId, global::System.String pricingPlanName, global::System.Boolean isPromo, global::System.Boolean isFeatured, global::System.Boolean isEnabled, global::System.Boolean showOnSite, global::System.Boolean customContactUs, global::System.Boolean customSiteProfile)
        {
            PricingPlan pricingPlan = new PricingPlan();
            pricingPlan.PricingPlanId = pricingPlanId;
            pricingPlan.PricingPlanName = pricingPlanName;
            pricingPlan.IsPromo = isPromo;
            pricingPlan.IsFeatured = isFeatured;
            pricingPlan.IsEnabled = isEnabled;
            pricingPlan.ShowOnSite = showOnSite;
            pricingPlan.CustomContactUs = customContactUs;
            pricingPlan.CustomSiteProfile = customSiteProfile;
            return pricingPlan;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PricingPlanId
        {
            get
            {
                return _PricingPlanId;
            }
            set
            {
                if (_PricingPlanId != value)
                {
                    OnPricingPlanIdChanging(value);
                    ReportPropertyChanging("PricingPlanId");
                    _PricingPlanId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PricingPlanId");
                    OnPricingPlanIdChanged();
                }
            }
        }
        private global::System.Int32 _PricingPlanId;
        partial void OnPricingPlanIdChanging(global::System.Int32 value);
        partial void OnPricingPlanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PricingPlanName
        {
            get
            {
                return _PricingPlanName;
            }
            set
            {
                OnPricingPlanNameChanging(value);
                ReportPropertyChanging("PricingPlanName");
                _PricingPlanName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PricingPlanName");
                OnPricingPlanNameChanged();
            }
        }
        private global::System.String _PricingPlanName;
        partial void OnPricingPlanNameChanging(global::System.String value);
        partial void OnPricingPlanNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PromoMessage
        {
            get
            {
                return _PromoMessage;
            }
            set
            {
                OnPromoMessageChanging(value);
                ReportPropertyChanging("PromoMessage");
                _PromoMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PromoMessage");
                OnPromoMessageChanged();
            }
        }
        private global::System.String _PromoMessage;
        partial void OnPromoMessageChanging(global::System.String value);
        partial void OnPromoMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPromo
        {
            get
            {
                return _IsPromo;
            }
            set
            {
                OnIsPromoChanging(value);
                ReportPropertyChanging("IsPromo");
                _IsPromo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPromo");
                OnIsPromoChanged();
            }
        }
        private global::System.Boolean _IsPromo;
        partial void OnIsPromoChanging(global::System.Boolean value);
        partial void OnIsPromoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFeatured
        {
            get
            {
                return _IsFeatured;
            }
            set
            {
                OnIsFeaturedChanging(value);
                ReportPropertyChanging("IsFeatured");
                _IsFeatured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFeatured");
                OnIsFeaturedChanged();
            }
        }
        private global::System.Boolean _IsFeatured;
        partial void OnIsFeaturedChanging(global::System.Boolean value);
        partial void OnIsFeaturedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private global::System.Boolean _IsEnabled;
        partial void OnIsEnabledChanging(global::System.Boolean value);
        partial void OnIsEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowOnSite
        {
            get
            {
                return _ShowOnSite;
            }
            set
            {
                OnShowOnSiteChanging(value);
                ReportPropertyChanging("ShowOnSite");
                _ShowOnSite = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowOnSite");
                OnShowOnSiteChanged();
            }
        }
        private global::System.Boolean _ShowOnSite;
        partial void OnShowOnSiteChanging(global::System.Boolean value);
        partial void OnShowOnSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PlanCharge
        {
            get
            {
                return _PlanCharge;
            }
            set
            {
                OnPlanChargeChanging(value);
                ReportPropertyChanging("PlanCharge");
                _PlanCharge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlanCharge");
                OnPlanChargeChanged();
            }
        }
        private Nullable<global::System.Decimal> _PlanCharge;
        partial void OnPlanChargeChanging(Nullable<global::System.Decimal> value);
        partial void OnPlanChargeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlanRecurrance
        {
            get
            {
                return _PlanRecurrance;
            }
            set
            {
                OnPlanRecurranceChanging(value);
                ReportPropertyChanging("PlanRecurrance");
                _PlanRecurrance = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlanRecurrance");
                OnPlanRecurranceChanged();
            }
        }
        private global::System.String _PlanRecurrance;
        partial void OnPlanRecurranceChanging(global::System.String value);
        partial void OnPlanRecurranceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfSongs
        {
            get
            {
                return _NumberOfSongs;
            }
            set
            {
                OnNumberOfSongsChanging(value);
                ReportPropertyChanging("NumberOfSongs");
                _NumberOfSongs = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfSongs");
                OnNumberOfSongsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfSongs;
        partial void OnNumberOfSongsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfSongsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfInvitedUsers
        {
            get
            {
                return _NumberOfInvitedUsers;
            }
            set
            {
                OnNumberOfInvitedUsersChanging(value);
                ReportPropertyChanging("NumberOfInvitedUsers");
                _NumberOfInvitedUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfInvitedUsers");
                OnNumberOfInvitedUsersChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfInvitedUsers;
        partial void OnNumberOfInvitedUsersChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfInvitedUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfCatalogAdmins
        {
            get
            {
                return _NumberOfCatalogAdmins;
            }
            set
            {
                OnNumberOfCatalogAdminsChanging(value);
                ReportPropertyChanging("NumberOfCatalogAdmins");
                _NumberOfCatalogAdmins = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfCatalogAdmins");
                OnNumberOfCatalogAdminsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfCatalogAdmins;
        partial void OnNumberOfCatalogAdminsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfCatalogAdminsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CustomContactUs
        {
            get
            {
                return _CustomContactUs;
            }
            set
            {
                OnCustomContactUsChanging(value);
                ReportPropertyChanging("CustomContactUs");
                _CustomContactUs = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomContactUs");
                OnCustomContactUsChanged();
            }
        }
        private global::System.Boolean _CustomContactUs;
        partial void OnCustomContactUsChanging(global::System.Boolean value);
        partial void OnCustomContactUsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CustomSiteProfile
        {
            get
            {
                return _CustomSiteProfile;
            }
            set
            {
                OnCustomSiteProfileChanging(value);
                ReportPropertyChanging("CustomSiteProfile");
                _CustomSiteProfile = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomSiteProfile");
                OnCustomSiteProfileChanged();
            }
        }
        private global::System.Boolean _CustomSiteProfile;
        partial void OnCustomSiteProfileChanging(global::System.Boolean value);
        partial void OnCustomSiteProfileChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Subscriptions_PricingPlans", "Subscription")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("SongSearch.Web.Data.Model.FK_Subscriptions_PricingPlans", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("SongSearch.Web.Data.Model.FK_Subscriptions_PricingPlans", "Subscription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Users_PricingPlans", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SongSearch.Web.Data.Model.FK_Users_PricingPlans", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SongSearch.Web.Data.Model.FK_Users_PricingPlans", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static Role CreateRole(global::System.Int32 roleId, global::System.String roleName)
        {
            Role role = new Role();
            role.RoleId = roleId;
            role.RoleName = roleName;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Users_Roles", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SongSearch.Web.Data.Model.FK_Users_Roles", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SongSearch.Web.Data.Model.FK_Users_Roles", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_UsersCatalogs_Roles", "UserCatalogRole")]
        public EntityCollection<UserCatalogRole> UserCatalogRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCatalogRole>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Roles", "UserCatalogRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCatalogRole>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Roles", "UserCatalogRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="SearchProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SearchProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchProperty object.
        /// </summary>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="propertyName">Initial value of the PropertyName property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="shortName">Initial value of the ShortName property.</param>
        /// <param name="propertyType">Initial value of the PropertyType property.</param>
        /// <param name="accessLevel">Initial value of the AccessLevel property.</param>
        /// <param name="isListable">Initial value of the IsListable property.</param>
        /// <param name="isCacheable">Initial value of the IsCacheable property.</param>
        /// <param name="isIndexable">Initial value of the IsIndexable property.</param>
        /// <param name="includeInSearchMenu">Initial value of the IncludeInSearchMenu property.</param>
        public static SearchProperty CreateSearchProperty(global::System.Int32 propertyId, global::System.String propertyName, global::System.String displayName, global::System.String shortName, global::System.String propertyType, global::System.Int16 accessLevel, global::System.Boolean isListable, global::System.Boolean isCacheable, global::System.Boolean isIndexable, global::System.Boolean includeInSearchMenu)
        {
            SearchProperty searchProperty = new SearchProperty();
            searchProperty.PropertyId = propertyId;
            searchProperty.PropertyName = propertyName;
            searchProperty.DisplayName = displayName;
            searchProperty.ShortName = shortName;
            searchProperty.PropertyType = propertyType;
            searchProperty.AccessLevel = accessLevel;
            searchProperty.IsListable = isListable;
            searchProperty.IsCacheable = isCacheable;
            searchProperty.IsIndexable = isIndexable;
            searchProperty.IncludeInSearchMenu = includeInSearchMenu;
            return searchProperty;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                if (_PropertyId != value)
                {
                    OnPropertyIdChanging(value);
                    ReportPropertyChanging("PropertyId");
                    _PropertyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyId");
                    OnPropertyIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                OnPropertyNameChanging(value);
                ReportPropertyChanging("PropertyName");
                _PropertyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyName");
                OnPropertyNameChanged();
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SearchGroup
        {
            get
            {
                return _SearchGroup;
            }
            set
            {
                OnSearchGroupChanging(value);
                ReportPropertyChanging("SearchGroup");
                _SearchGroup = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SearchGroup");
                OnSearchGroupChanged();
            }
        }
        private global::System.String _SearchGroup;
        partial void OnSearchGroupChanging(global::System.String value);
        partial void OnSearchGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> SearchTypeId
        {
            get
            {
                return _SearchTypeId;
            }
            set
            {
                OnSearchTypeIdChanging(value);
                ReportPropertyChanging("SearchTypeId");
                _SearchTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchTypeId");
                OnSearchTypeIdChanged();
            }
        }
        private Nullable<global::System.Int16> _SearchTypeId;
        partial void OnSearchTypeIdChanging(Nullable<global::System.Int16> value);
        partial void OnSearchTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SearchPredicate
        {
            get
            {
                return _SearchPredicate;
            }
            set
            {
                OnSearchPredicateChanging(value);
                ReportPropertyChanging("SearchPredicate");
                _SearchPredicate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SearchPredicate");
                OnSearchPredicateChanged();
            }
        }
        private global::System.String _SearchPredicate;
        partial void OnSearchPredicateChanging(global::System.String value);
        partial void OnSearchPredicateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyType
        {
            get
            {
                return _PropertyType;
            }
            set
            {
                OnPropertyTypeChanging(value);
                ReportPropertyChanging("PropertyType");
                _PropertyType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyType");
                OnPropertyTypeChanged();
            }
        }
        private global::System.String _PropertyType;
        partial void OnPropertyTypeChanging(global::System.String value);
        partial void OnPropertyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LookupName
        {
            get
            {
                return _LookupName;
            }
            set
            {
                OnLookupNameChanging(value);
                ReportPropertyChanging("LookupName");
                _LookupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LookupName");
                OnLookupNameChanged();
            }
        }
        private global::System.String _LookupName;
        partial void OnLookupNameChanging(global::System.String value);
        partial void OnLookupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ListName
        {
            get
            {
                return _ListName;
            }
            set
            {
                OnListNameChanging(value);
                ReportPropertyChanging("ListName");
                _ListName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ListName");
                OnListNameChanged();
            }
        }
        private global::System.String _ListName;
        partial void OnListNameChanging(global::System.String value);
        partial void OnListNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 AccessLevel
        {
            get
            {
                return _AccessLevel;
            }
            set
            {
                OnAccessLevelChanging(value);
                ReportPropertyChanging("AccessLevel");
                _AccessLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessLevel");
                OnAccessLevelChanged();
            }
        }
        private global::System.Int16 _AccessLevel;
        partial void OnAccessLevelChanging(global::System.Int16 value);
        partial void OnAccessLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsListable
        {
            get
            {
                return _IsListable;
            }
            set
            {
                OnIsListableChanging(value);
                ReportPropertyChanging("IsListable");
                _IsListable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsListable");
                OnIsListableChanged();
            }
        }
        private global::System.Boolean _IsListable;
        partial void OnIsListableChanging(global::System.Boolean value);
        partial void OnIsListableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCacheable
        {
            get
            {
                return _IsCacheable;
            }
            set
            {
                OnIsCacheableChanging(value);
                ReportPropertyChanging("IsCacheable");
                _IsCacheable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCacheable");
                OnIsCacheableChanged();
            }
        }
        private global::System.Boolean _IsCacheable;
        partial void OnIsCacheableChanging(global::System.Boolean value);
        partial void OnIsCacheableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIndexable
        {
            get
            {
                return _IsIndexable;
            }
            set
            {
                OnIsIndexableChanging(value);
                ReportPropertyChanging("IsIndexable");
                _IsIndexable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsIndexable");
                OnIsIndexableChanged();
            }
        }
        private global::System.Boolean _IsIndexable;
        partial void OnIsIndexableChanging(global::System.Boolean value);
        partial void OnIsIndexableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncludeInSearchMenu
        {
            get
            {
                return _IncludeInSearchMenu;
            }
            set
            {
                OnIncludeInSearchMenuChanging(value);
                ReportPropertyChanging("IncludeInSearchMenu");
                _IncludeInSearchMenu = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IncludeInSearchMenu");
                OnIncludeInSearchMenuChanged();
            }
        }
        private global::System.Boolean _IncludeInSearchMenu;
        partial void OnIncludeInSearchMenuChanging(global::System.Boolean value);
        partial void OnIncludeInSearchMenuChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="SiteProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SiteProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SiteProfile object.
        /// </summary>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        /// <param name="profileName">Initial value of the ProfileName property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="contactAddress">Initial value of the ContactAddress property.</param>
        /// <param name="contactCity">Initial value of the ContactCity property.</param>
        /// <param name="contactStateRegion">Initial value of the ContactStateRegion property.</param>
        /// <param name="contactPostalCode">Initial value of the ContactPostalCode property.</param>
        /// <param name="contactCountry">Initial value of the ContactCountry property.</param>
        /// <param name="contactPhone">Initial value of the ContactPhone property.</param>
        /// <param name="contactEmail">Initial value of the ContactEmail property.</param>
        /// <param name="adminEmail">Initial value of the AdminEmail property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static SiteProfile CreateSiteProfile(global::System.Int32 profileId, global::System.String profileName, global::System.String companyName, global::System.String contactAddress, global::System.String contactCity, global::System.String contactStateRegion, global::System.String contactPostalCode, global::System.String contactCountry, global::System.String contactPhone, global::System.String contactEmail, global::System.String adminEmail, global::System.DateTime createdOn, global::System.Int32 createdByUserId)
        {
            SiteProfile siteProfile = new SiteProfile();
            siteProfile.ProfileId = profileId;
            siteProfile.ProfileName = profileName;
            siteProfile.CompanyName = companyName;
            siteProfile.ContactAddress = contactAddress;
            siteProfile.ContactCity = contactCity;
            siteProfile.ContactStateRegion = contactStateRegion;
            siteProfile.ContactPostalCode = contactPostalCode;
            siteProfile.ContactCountry = contactCountry;
            siteProfile.ContactPhone = contactPhone;
            siteProfile.ContactEmail = contactEmail;
            siteProfile.AdminEmail = adminEmail;
            siteProfile.CreatedOn = createdOn;
            siteProfile.CreatedByUserId = createdByUserId;
            return siteProfile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                if (_ProfileId != value)
                {
                    OnProfileIdChanging(value);
                    ReportPropertyChanging("ProfileId");
                    _ProfileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProfileId");
                    OnProfileIdChanged();
                }
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProfileName
        {
            get
            {
                return _ProfileName;
            }
            set
            {
                OnProfileNameChanging(value);
                ReportPropertyChanging("ProfileName");
                _ProfileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProfileName");
                OnProfileNameChanged();
            }
        }
        private global::System.String _ProfileName;
        partial void OnProfileNameChanging(global::System.String value);
        partial void OnProfileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactAddress
        {
            get
            {
                return _ContactAddress;
            }
            set
            {
                OnContactAddressChanging(value);
                ReportPropertyChanging("ContactAddress");
                _ContactAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactAddress");
                OnContactAddressChanged();
            }
        }
        private global::System.String _ContactAddress;
        partial void OnContactAddressChanging(global::System.String value);
        partial void OnContactAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactAddress2
        {
            get
            {
                return _ContactAddress2;
            }
            set
            {
                OnContactAddress2Changing(value);
                ReportPropertyChanging("ContactAddress2");
                _ContactAddress2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactAddress2");
                OnContactAddress2Changed();
            }
        }
        private global::System.String _ContactAddress2;
        partial void OnContactAddress2Changing(global::System.String value);
        partial void OnContactAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactCity
        {
            get
            {
                return _ContactCity;
            }
            set
            {
                OnContactCityChanging(value);
                ReportPropertyChanging("ContactCity");
                _ContactCity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactCity");
                OnContactCityChanged();
            }
        }
        private global::System.String _ContactCity;
        partial void OnContactCityChanging(global::System.String value);
        partial void OnContactCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactStateRegion
        {
            get
            {
                return _ContactStateRegion;
            }
            set
            {
                OnContactStateRegionChanging(value);
                ReportPropertyChanging("ContactStateRegion");
                _ContactStateRegion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactStateRegion");
                OnContactStateRegionChanged();
            }
        }
        private global::System.String _ContactStateRegion;
        partial void OnContactStateRegionChanging(global::System.String value);
        partial void OnContactStateRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactPostalCode
        {
            get
            {
                return _ContactPostalCode;
            }
            set
            {
                OnContactPostalCodeChanging(value);
                ReportPropertyChanging("ContactPostalCode");
                _ContactPostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactPostalCode");
                OnContactPostalCodeChanged();
            }
        }
        private global::System.String _ContactPostalCode;
        partial void OnContactPostalCodeChanging(global::System.String value);
        partial void OnContactPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactCountry
        {
            get
            {
                return _ContactCountry;
            }
            set
            {
                OnContactCountryChanging(value);
                ReportPropertyChanging("ContactCountry");
                _ContactCountry = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactCountry");
                OnContactCountryChanged();
            }
        }
        private global::System.String _ContactCountry;
        partial void OnContactCountryChanging(global::System.String value);
        partial void OnContactCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactPhone
        {
            get
            {
                return _ContactPhone;
            }
            set
            {
                OnContactPhoneChanging(value);
                ReportPropertyChanging("ContactPhone");
                _ContactPhone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactPhone");
                OnContactPhoneChanged();
            }
        }
        private global::System.String _ContactPhone;
        partial void OnContactPhoneChanging(global::System.String value);
        partial void OnContactPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactFax
        {
            get
            {
                return _ContactFax;
            }
            set
            {
                OnContactFaxChanging(value);
                ReportPropertyChanging("ContactFax");
                _ContactFax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactFax");
                OnContactFaxChanged();
            }
        }
        private global::System.String _ContactFax;
        partial void OnContactFaxChanging(global::System.String value);
        partial void OnContactFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AdminEmail
        {
            get
            {
                return _AdminEmail;
            }
            set
            {
                OnAdminEmailChanging(value);
                ReportPropertyChanging("AdminEmail");
                _AdminEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AdminEmail");
                OnAdminEmailChanged();
            }
        }
        private global::System.String _AdminEmail;
        partial void OnAdminEmailChanging(global::System.String value);
        partial void OnAdminEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "SiteProfilesContacts", "Contact")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("SongSearch.Web.Data.Model.SiteProfilesContacts", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("SongSearch.Web.Data.Model.SiteProfilesContacts", "Contact", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="Subscription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subscription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subscription object.
        /// </summary>
        /// <param name="subscriptionId">Initial value of the SubscriptionId property.</param>
        /// <param name="pricingPlanId">Initial value of the PricingPlanId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="subscriptionStartDate">Initial value of the SubscriptionStartDate property.</param>
        /// <param name="planCharge">Initial value of the PlanCharge property.</param>
        public static Subscription CreateSubscription(global::System.Int32 subscriptionId, global::System.Int32 pricingPlanId, global::System.Int32 userId, global::System.DateTime subscriptionStartDate, global::System.Decimal planCharge)
        {
            Subscription subscription = new Subscription();
            subscription.SubscriptionId = subscriptionId;
            subscription.PricingPlanId = pricingPlanId;
            subscription.UserId = userId;
            subscription.SubscriptionStartDate = subscriptionStartDate;
            subscription.PlanCharge = planCharge;
            return subscription;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubscriptionId
        {
            get
            {
                return _SubscriptionId;
            }
            set
            {
                if (_SubscriptionId != value)
                {
                    OnSubscriptionIdChanging(value);
                    ReportPropertyChanging("SubscriptionId");
                    _SubscriptionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubscriptionId");
                    OnSubscriptionIdChanged();
                }
            }
        }
        private global::System.Int32 _SubscriptionId;
        partial void OnSubscriptionIdChanging(global::System.Int32 value);
        partial void OnSubscriptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PricingPlanId
        {
            get
            {
                return _PricingPlanId;
            }
            set
            {
                OnPricingPlanIdChanging(value);
                ReportPropertyChanging("PricingPlanId");
                _PricingPlanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PricingPlanId");
                OnPricingPlanIdChanged();
            }
        }
        private global::System.Int32 _PricingPlanId;
        partial void OnPricingPlanIdChanging(global::System.Int32 value);
        partial void OnPricingPlanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SubscriptionStartDate
        {
            get
            {
                return _SubscriptionStartDate;
            }
            set
            {
                OnSubscriptionStartDateChanging(value);
                ReportPropertyChanging("SubscriptionStartDate");
                _SubscriptionStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubscriptionStartDate");
                OnSubscriptionStartDateChanged();
            }
        }
        private global::System.DateTime _SubscriptionStartDate;
        partial void OnSubscriptionStartDateChanging(global::System.DateTime value);
        partial void OnSubscriptionStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubscriptionEndDate
        {
            get
            {
                return _SubscriptionEndDate;
            }
            set
            {
                OnSubscriptionEndDateChanging(value);
                ReportPropertyChanging("SubscriptionEndDate");
                _SubscriptionEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubscriptionEndDate");
                OnSubscriptionEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubscriptionEndDate;
        partial void OnSubscriptionEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSubscriptionEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PlanCharge
        {
            get
            {
                return _PlanCharge;
            }
            set
            {
                OnPlanChargeChanging(value);
                ReportPropertyChanging("PlanCharge");
                _PlanCharge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlanCharge");
                OnPlanChargeChanged();
            }
        }
        private global::System.Decimal _PlanCharge;
        partial void OnPlanChargeChanging(global::System.Decimal value);
        partial void OnPlanChargeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Subscriptions_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Subscriptions_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Subscriptions_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Subscriptions_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SongSearch.Web.Data.Model.FK_Subscriptions_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Subscriptions_PricingPlans", "PricingPlan")]
        public PricingPlan PricingPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PricingPlan>("SongSearch.Web.Data.Model.FK_Subscriptions_PricingPlans", "PricingPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PricingPlan>("SongSearch.Web.Data.Model.FK_Subscriptions_PricingPlans", "PricingPlan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PricingPlan> PricingPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PricingPlan>("SongSearch.Web.Data.Model.FK_Subscriptions_PricingPlans", "PricingPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PricingPlan>("SongSearch.Web.Data.Model.FK_Subscriptions_PricingPlans", "PricingPlan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="tagId">Initial value of the TagId property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="tagTypeId">Initial value of the TagTypeId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static Tag CreateTag(global::System.Int32 tagId, global::System.String tagName, global::System.Int32 createdByUserId, global::System.Int32 tagTypeId, global::System.DateTime createdOn)
        {
            Tag tag = new Tag();
            tag.TagId = tagId;
            tag.TagName = tagName;
            tag.CreatedByUserId = createdByUserId;
            tag.TagTypeId = tagTypeId;
            tag.CreatedOn = createdOn;
            return tag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                if (_TagId != value)
                {
                    OnTagIdChanging(value);
                    ReportPropertyChanging("TagId");
                    _TagId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TagId");
                    OnTagIdChanged();
                }
            }
        }
        private global::System.Int32 _TagId;
        partial void OnTagIdChanging(global::System.Int32 value);
        partial void OnTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagTypeId
        {
            get
            {
                return _TagTypeId;
            }
            set
            {
                OnTagTypeIdChanging(value);
                ReportPropertyChanging("TagTypeId");
                _TagTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagTypeId");
                OnTagTypeIdChanged();
            }
        }
        private global::System.Int32 _TagTypeId;
        partial void OnTagTypeIdChanging(global::System.Int32 value);
        partial void OnTagTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "ContentTags", "Contents")]
        public EntityCollection<Content> Contents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Content>("SongSearch.Web.Data.Model.ContentTags", "Contents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Content>("SongSearch.Web.Data.Model.ContentTags", "Contents", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="Territory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Territory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Territory object.
        /// </summary>
        /// <param name="territoryId">Initial value of the TerritoryId property.</param>
        /// <param name="territoryCode">Initial value of the TerritoryCode property.</param>
        /// <param name="territoryName">Initial value of the TerritoryName property.</param>
        public static Territory CreateTerritory(global::System.Int32 territoryId, global::System.String territoryCode, global::System.String territoryName)
        {
            Territory territory = new Territory();
            territory.TerritoryId = territoryId;
            territory.TerritoryCode = territoryCode;
            territory.TerritoryName = territoryName;
            return territory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TerritoryId
        {
            get
            {
                return _TerritoryId;
            }
            set
            {
                if (_TerritoryId != value)
                {
                    OnTerritoryIdChanging(value);
                    ReportPropertyChanging("TerritoryId");
                    _TerritoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TerritoryId");
                    OnTerritoryIdChanged();
                }
            }
        }
        private global::System.Int32 _TerritoryId;
        partial void OnTerritoryIdChanging(global::System.Int32 value);
        partial void OnTerritoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TerritoryCode
        {
            get
            {
                return _TerritoryCode;
            }
            set
            {
                OnTerritoryCodeChanging(value);
                ReportPropertyChanging("TerritoryCode");
                _TerritoryCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TerritoryCode");
                OnTerritoryCodeChanged();
            }
        }
        private global::System.String _TerritoryCode;
        partial void OnTerritoryCodeChanging(global::System.String value);
        partial void OnTerritoryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TerritoryName
        {
            get
            {
                return _TerritoryName;
            }
            set
            {
                OnTerritoryNameChanging(value);
                ReportPropertyChanging("TerritoryName");
                _TerritoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TerritoryName");
                OnTerritoryNameChanged();
            }
        }
        private global::System.String _TerritoryName;
        partial void OnTerritoryNameChanging(global::System.String value);
        partial void OnTerritoryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "ContentRightTerritories", "ContentRights")]
        public EntityCollection<ContentRight> ContentRights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentRight>("SongSearch.Web.Data.Model.ContentRightTerritories", "ContentRights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentRight>("SongSearch.Web.Data.Model.ContentRightTerritories", "ContentRights", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="registeredOn">Initial value of the RegisteredOn property.</param>
        /// <param name="siteProfileId">Initial value of the SiteProfileId property.</param>
        /// <param name="appendSignatureToTitle">Initial value of the AppendSignatureToTitle property.</param>
        /// <param name="pricingPlanId">Initial value of the PricingPlanId property.</param>
        /// <param name="hasAgreedToPrivacyPolicy">Initial value of the HasAgreedToPrivacyPolicy property.</param>
        /// <param name="hasAllowedCommunication">Initial value of the HasAllowedCommunication property.</param>
        /// <param name="planUserId">Initial value of the PlanUserId property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String userName, global::System.String password, global::System.Int32 roleId, global::System.DateTime registeredOn, global::System.Int32 siteProfileId, global::System.Boolean appendSignatureToTitle, global::System.Int32 pricingPlanId, global::System.Boolean hasAgreedToPrivacyPolicy, global::System.Boolean hasAllowedCommunication, global::System.Int32 planUserId)
        {
            User user = new User();
            user.UserId = userId;
            user.UserName = userName;
            user.Password = password;
            user.RoleId = roleId;
            user.RegisteredOn = registeredOn;
            user.SiteProfileId = siteProfileId;
            user.AppendSignatureToTitle = appendSignatureToTitle;
            user.PricingPlanId = pricingPlanId;
            user.HasAgreedToPrivacyPolicy = hasAgreedToPrivacyPolicy;
            user.HasAllowedCommunication = hasAllowedCommunication;
            user.PlanUserId = planUserId;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentUserId
        {
            get
            {
                return _ParentUserId;
            }
            set
            {
                OnParentUserIdChanging(value);
                ReportPropertyChanging("ParentUserId");
                _ParentUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentUserId");
                OnParentUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentUserId;
        partial void OnParentUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> InvitationId
        {
            get
            {
                return _InvitationId;
            }
            set
            {
                OnInvitationIdChanging(value);
                ReportPropertyChanging("InvitationId");
                _InvitationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitationId");
                OnInvitationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _InvitationId;
        partial void OnInvitationIdChanging(Nullable<global::System.Guid> value);
        partial void OnInvitationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegisteredOn
        {
            get
            {
                return _RegisteredOn;
            }
            set
            {
                OnRegisteredOnChanging(value);
                ReportPropertyChanging("RegisteredOn");
                _RegisteredOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegisteredOn");
                OnRegisteredOnChanged();
            }
        }
        private global::System.DateTime _RegisteredOn;
        partial void OnRegisteredOnChanging(global::System.DateTime value);
        partial void OnRegisteredOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Signature
        {
            get
            {
                return _Signature;
            }
            set
            {
                OnSignatureChanging(value);
                ReportPropertyChanging("Signature");
                _Signature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Signature");
                OnSignatureChanged();
            }
        }
        private global::System.String _Signature;
        partial void OnSignatureChanging(global::System.String value);
        partial void OnSignatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ShowDebugInfo
        {
            get
            {
                return _ShowDebugInfo;
            }
            set
            {
                OnShowDebugInfoChanging(value);
                ReportPropertyChanging("ShowDebugInfo");
                _ShowDebugInfo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowDebugInfo");
                OnShowDebugInfoChanged();
            }
        }
        private Nullable<global::System.Boolean> _ShowDebugInfo;
        partial void OnShowDebugInfoChanging(Nullable<global::System.Boolean> value);
        partial void OnShowDebugInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteProfileId
        {
            get
            {
                return _SiteProfileId;
            }
            set
            {
                OnSiteProfileIdChanging(value);
                ReportPropertyChanging("SiteProfileId");
                _SiteProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteProfileId");
                OnSiteProfileIdChanged();
            }
        }
        private global::System.Int32 _SiteProfileId;
        partial void OnSiteProfileIdChanging(global::System.Int32 value);
        partial void OnSiteProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AppendSignatureToTitle
        {
            get
            {
                return _AppendSignatureToTitle;
            }
            set
            {
                OnAppendSignatureToTitleChanging(value);
                ReportPropertyChanging("AppendSignatureToTitle");
                _AppendSignatureToTitle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppendSignatureToTitle");
                OnAppendSignatureToTitleChanged();
            }
        }
        private global::System.Boolean _AppendSignatureToTitle;
        partial void OnAppendSignatureToTitleChanging(global::System.Boolean value);
        partial void OnAppendSignatureToTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PricingPlanId
        {
            get
            {
                return _PricingPlanId;
            }
            set
            {
                OnPricingPlanIdChanging(value);
                ReportPropertyChanging("PricingPlanId");
                _PricingPlanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PricingPlanId");
                OnPricingPlanIdChanged();
            }
        }
        private global::System.Int32 _PricingPlanId;
        partial void OnPricingPlanIdChanging(global::System.Int32 value);
        partial void OnPricingPlanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasAgreedToPrivacyPolicy
        {
            get
            {
                return _HasAgreedToPrivacyPolicy;
            }
            set
            {
                OnHasAgreedToPrivacyPolicyChanging(value);
                ReportPropertyChanging("HasAgreedToPrivacyPolicy");
                _HasAgreedToPrivacyPolicy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasAgreedToPrivacyPolicy");
                OnHasAgreedToPrivacyPolicyChanged();
            }
        }
        private global::System.Boolean _HasAgreedToPrivacyPolicy;
        partial void OnHasAgreedToPrivacyPolicyChanging(global::System.Boolean value);
        partial void OnHasAgreedToPrivacyPolicyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasAllowedCommunication
        {
            get
            {
                return _HasAllowedCommunication;
            }
            set
            {
                OnHasAllowedCommunicationChanging(value);
                ReportPropertyChanging("HasAllowedCommunication");
                _HasAllowedCommunication = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasAllowedCommunication");
                OnHasAllowedCommunicationChanged();
            }
        }
        private global::System.Boolean _HasAllowedCommunication;
        partial void OnHasAllowedCommunicationChanging(global::System.Boolean value);
        partial void OnHasAllowedCommunicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlanUserId
        {
            get
            {
                return _PlanUserId;
            }
            set
            {
                OnPlanUserIdChanging(value);
                ReportPropertyChanging("PlanUserId");
                _PlanUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlanUserId");
                OnPlanUserIdChanged();
            }
        }
        private global::System.Int32 _PlanUserId;
        partial void OnPlanUserIdChanging(global::System.Int32 value);
        partial void OnPlanUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Users_Roles", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SongSearch.Web.Data.Model.FK_Users_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SongSearch.Web.Data.Model.FK_Users_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SongSearch.Web.Data.Model.FK_Users_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("SongSearch.Web.Data.Model.FK_Users_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Users_Invitations", "Invitation")]
        public Invitation Invitation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invitation>("SongSearch.Web.Data.Model.FK_Users_Invitations", "Invitation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invitation>("SongSearch.Web.Data.Model.FK_Users_Invitations", "Invitation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invitation> InvitationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invitation>("SongSearch.Web.Data.Model.FK_Users_Invitations", "Invitation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invitation>("SongSearch.Web.Data.Model.FK_Users_Invitations", "Invitation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Carts_Users", "Cart")]
        public EntityCollection<Cart> Carts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cart>("SongSearch.Web.Data.Model.FK_Carts_Users", "Cart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cart>("SongSearch.Web.Data.Model.FK_Carts_Users", "Cart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_UsersCatalogs_Users", "UserCatalogRole")]
        public EntityCollection<UserCatalogRole> UserCatalogRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCatalogRole>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Users", "UserCatalogRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCatalogRole>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Users", "UserCatalogRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Users_Users", "User")]
        public User ParentUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Users_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Users_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ParentUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Users_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SongSearch.Web.Data.Model.FK_Users_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Catalogs_Creators", "Catalog")]
        public EntityCollection<Catalog> CreatedCatalogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Catalog>("SongSearch.Web.Data.Model.FK_Catalogs_Creators", "Catalog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Catalog>("SongSearch.Web.Data.Model.FK_Catalogs_Creators", "Catalog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "UsersContacts", "Contact")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("SongSearch.Web.Data.Model.UsersContacts", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("SongSearch.Web.Data.Model.UsersContacts", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Subscriptions_Users", "Subscription")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("SongSearch.Web.Data.Model.FK_Subscriptions_Users", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("SongSearch.Web.Data.Model.FK_Subscriptions_Users", "Subscription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Users_PlanUsers", "User1")]
        public EntityCollection<User> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SongSearch.Web.Data.Model.FK_Users_PlanUsers", "User1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SongSearch.Web.Data.Model.FK_Users_PlanUsers", "User1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Users_PlanUsers", "User")]
        public User PlanUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Users_PlanUsers", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Users_PlanUsers", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> PlanUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_Users_PlanUsers", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SongSearch.Web.Data.Model.FK_Users_PlanUsers", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_Users_PricingPlans", "PricingPlan")]
        public PricingPlan PricingPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PricingPlan>("SongSearch.Web.Data.Model.FK_Users_PricingPlans", "PricingPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PricingPlan>("SongSearch.Web.Data.Model.FK_Users_PricingPlans", "PricingPlan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PricingPlan> PricingPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PricingPlan>("SongSearch.Web.Data.Model.FK_Users_PricingPlans", "PricingPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PricingPlan>("SongSearch.Web.Data.Model.FK_Users_PricingPlans", "PricingPlan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearch.Web.Data.Model", Name="UserCatalogRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserCatalogRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserCatalogRole object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="catalogId">Initial value of the CatalogId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static UserCatalogRole CreateUserCatalogRole(global::System.Int32 userId, global::System.Int32 catalogId, global::System.Int32 roleId)
        {
            UserCatalogRole userCatalogRole = new UserCatalogRole();
            userCatalogRole.UserId = userId;
            userCatalogRole.CatalogId = catalogId;
            userCatalogRole.RoleId = roleId;
            return userCatalogRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CatalogId
        {
            get
            {
                return _CatalogId;
            }
            set
            {
                if (_CatalogId != value)
                {
                    OnCatalogIdChanging(value);
                    ReportPropertyChanging("CatalogId");
                    _CatalogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CatalogId");
                    OnCatalogIdChanged();
                }
            }
        }
        private global::System.Int32 _CatalogId;
        partial void OnCatalogIdChanging(global::System.Int32 value);
        partial void OnCatalogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_UsersCatalogs_Catalogs", "Catalog")]
        public Catalog Catalog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catalog>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Catalogs", "Catalog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catalog>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Catalogs", "Catalog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Catalog> CatalogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catalog>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Catalogs", "Catalog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Catalog>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Catalogs", "Catalog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_UsersCatalogs_Roles", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Roles", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Roles", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Roles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Roles", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearch.Web.Data.Model", "FK_UsersCatalogs_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SongSearch.Web.Data.Model.FK_UsersCatalogs_Users", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
