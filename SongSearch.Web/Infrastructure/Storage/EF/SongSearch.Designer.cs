//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SongSearchModel", "FK_CartContents_Contents", "Contents", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Infrastructure.Storage.EF.Content), "CartContents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.CartContent), true)]
[assembly: EdmRelationshipAttribute("SongSearchModel", "FK_CartItems_Carts", "Carts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Infrastructure.Storage.EF.Cart), "CartContents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.CartContent), true)]
[assembly: EdmRelationshipAttribute("SongSearchModel", "FK_Contents_Catalogs", "Catalogs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Infrastructure.Storage.EF.Catalog), "Contents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.Content), true)]
[assembly: EdmRelationshipAttribute("SongSearchModel", "FK_UsersCatalogs_Catalogs", "Catalogs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Infrastructure.Storage.EF.Catalog), "UsersCatalogs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.UsersCatalog), true)]
[assembly: EdmRelationshipAttribute("SongSearchModel", "FK_ContentRights_Contents", "Contents", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Infrastructure.Storage.EF.Content), "ContentRights", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.ContentRight), true)]
[assembly: EdmRelationshipAttribute("SongSearchModel", "FK_ContentRights_RightsHolders", "RightsHolders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Infrastructure.Storage.EF.RightsHolder), "ContentRights", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.ContentRight), true)]
[assembly: EdmRelationshipAttribute("SongSearchModel", "FK_Users_Invitations", "Invitations", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SongSearch.Web.Infrastructure.Storage.EF.Invitation), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.User), true)]
[assembly: EdmRelationshipAttribute("SongSearchModel", "FK_Users_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Infrastructure.Storage.EF.Role), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.User), true)]
[assembly: EdmRelationshipAttribute("SongSearchModel", "FK_UsersCatalogs_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Infrastructure.Storage.EF.Role), "UsersCatalogs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.UsersCatalog), true)]
[assembly: EdmRelationshipAttribute("SongSearchModel", "FK_UsersCatalogs_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SongSearch.Web.Infrastructure.Storage.EF.User), "UsersCatalogs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.UsersCatalog), true)]
[assembly: EdmRelationshipAttribute("SongSearchModel", "ContentRightTerritories", "ContentRights", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.ContentRight), "Territories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.Territory))]
[assembly: EdmRelationshipAttribute("SongSearchModel", "ContentTags", "Contents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.Content), "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.Tag))]
[assembly: EdmRelationshipAttribute("SongSearchModel", "FK_Users_ParentUsers", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SongSearch.Web.Infrastructure.Storage.EF.User), "ChildUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SongSearch.Web.Infrastructure.Storage.EF.User), true)]

#endregion

namespace SongSearch.Web.Infrastructure.Storage.EF
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SongSearchContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SongSearchContext object using the connection string found in the 'SongSearchContext' section of the application configuration file.
        /// </summary>
        public SongSearchContext() : base("name=SongSearchContext", "SongSearchContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SongSearchContext object.
        /// </summary>
        public SongSearchContext(string connectionString) : base(connectionString, "SongSearchContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SongSearchContext object.
        /// </summary>
        public SongSearchContext(EntityConnection connection) : base(connection, "SongSearchContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CartContent> CartContents
        {
            get
            {
                if ((_CartContents == null))
                {
                    _CartContents = base.CreateObjectSet<CartContent>("CartContents");
                }
                return _CartContents;
            }
        }
        private ObjectSet<CartContent> _CartContents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cart> Carts
        {
            get
            {
                if ((_Carts == null))
                {
                    _Carts = base.CreateObjectSet<Cart>("Carts");
                }
                return _Carts;
            }
        }
        private ObjectSet<Cart> _Carts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Catalog> Catalogs
        {
            get
            {
                if ((_Catalogs == null))
                {
                    _Catalogs = base.CreateObjectSet<Catalog>("Catalogs");
                }
                return _Catalogs;
            }
        }
        private ObjectSet<Catalog> _Catalogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentRight> ContentRights
        {
            get
            {
                if ((_ContentRights == null))
                {
                    _ContentRights = base.CreateObjectSet<ContentRight>("ContentRights");
                }
                return _ContentRights;
            }
        }
        private ObjectSet<ContentRight> _ContentRights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Content> Contents
        {
            get
            {
                if ((_Contents == null))
                {
                    _Contents = base.CreateObjectSet<Content>("Contents");
                }
                return _Contents;
            }
        }
        private ObjectSet<Content> _Contents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invitation> Invitations
        {
            get
            {
                if ((_Invitations == null))
                {
                    _Invitations = base.CreateObjectSet<Invitation>("Invitations");
                }
                return _Invitations;
            }
        }
        private ObjectSet<Invitation> _Invitations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RightsHolder> RightsHolders
        {
            get
            {
                if ((_RightsHolders == null))
                {
                    _RightsHolders = base.CreateObjectSet<RightsHolder>("RightsHolders");
                }
                return _RightsHolders;
            }
        }
        private ObjectSet<RightsHolder> _RightsHolders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Territory> Territories
        {
            get
            {
                if ((_Territories == null))
                {
                    _Territories = base.CreateObjectSet<Territory>("Territories");
                }
                return _Territories;
            }
        }
        private ObjectSet<Territory> _Territories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersCatalog> UsersCatalogs
        {
            get
            {
                if ((_UsersCatalogs == null))
                {
                    _UsersCatalogs = base.CreateObjectSet<UsersCatalog>("UsersCatalogs");
                }
                return _UsersCatalogs;
            }
        }
        private ObjectSet<UsersCatalog> _UsersCatalogs;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CartContents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCartContents(CartContent cartContent)
        {
            base.AddObject("CartContents", cartContent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Carts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarts(Cart cart)
        {
            base.AddObject("Carts", cart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Catalogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCatalogs(Catalog catalog)
        {
            base.AddObject("Catalogs", catalog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentRights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentRights(ContentRight contentRight)
        {
            base.AddObject("ContentRights", contentRight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContents(Content content)
        {
            base.AddObject("Contents", content);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invitations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvitations(Invitation invitation)
        {
            base.AddObject("Invitations", invitation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RightsHolders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRightsHolders(RightsHolder rightsHolder)
        {
            base.AddObject("RightsHolders", rightsHolder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Territories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTerritories(Territory territory)
        {
            base.AddObject("Territories", territory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersCatalogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersCatalogs(UsersCatalog usersCatalog)
        {
            base.AddObject("UsersCatalogs", usersCatalog);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearchModel", Name="Cart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cart object.
        /// </summary>
        /// <param name="cartId">Initial value of the CartId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="cartStatus">Initial value of the CartStatus property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="lastUpdatedOn">Initial value of the LastUpdatedOn property.</param>
        public static Cart CreateCart(global::System.Int32 cartId, global::System.Int32 userId, global::System.Int16 cartStatus, global::System.DateTime createdOn, global::System.DateTime lastUpdatedOn)
        {
            Cart cart = new Cart();
            cart.CartId = cartId;
            cart.UserId = userId;
            cart.CartStatus = cartStatus;
            cart.CreatedOn = createdOn;
            cart.LastUpdatedOn = lastUpdatedOn;
            return cart;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CartId
        {
            get
            {
                return _CartId;
            }
            set
            {
                if (_CartId != value)
                {
                    OnCartIdChanging(value);
                    ReportPropertyChanging("CartId");
                    _CartId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CartId");
                    OnCartIdChanged();
                }
            }
        }
        private global::System.Int32 _CartId;
        partial void OnCartIdChanging(global::System.Int32 value);
        partial void OnCartIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CartStatus
        {
            get
            {
                return _CartStatus;
            }
            set
            {
                OnCartStatusChanging(value);
                ReportPropertyChanging("CartStatus");
                _CartStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CartStatus");
                OnCartStatusChanged();
            }
        }
        private global::System.Int16 _CartStatus;
        partial void OnCartStatusChanging(global::System.Int16 value);
        partial void OnCartStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedOn
        {
            get
            {
                return _LastUpdatedOn;
            }
            set
            {
                OnLastUpdatedOnChanging(value);
                ReportPropertyChanging("LastUpdatedOn");
                _LastUpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedOn");
                OnLastUpdatedOnChanged();
            }
        }
        private global::System.DateTime _LastUpdatedOn;
        partial void OnLastUpdatedOnChanging(global::System.DateTime value);
        partial void OnLastUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberItems
        {
            get
            {
                return _NumberItems;
            }
            set
            {
                OnNumberItemsChanging(value);
                ReportPropertyChanging("NumberItems");
                _NumberItems = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberItems");
                OnNumberItemsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberItems;
        partial void OnNumberItemsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberItemsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CompressedSize
        {
            get
            {
                return _CompressedSize;
            }
            set
            {
                OnCompressedSizeChanging(value);
                ReportPropertyChanging("CompressedSize");
                _CompressedSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompressedSize");
                OnCompressedSizeChanged();
            }
        }
        private Nullable<global::System.Decimal> _CompressedSize;
        partial void OnCompressedSizeChanging(Nullable<global::System.Decimal> value);
        partial void OnCompressedSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArchiveName
        {
            get
            {
                return _ArchiveName;
            }
            set
            {
                OnArchiveNameChanging(value);
                ReportPropertyChanging("ArchiveName");
                _ArchiveName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ArchiveName");
                OnArchiveNameChanged();
            }
        }
        private global::System.String _ArchiveName;
        partial void OnArchiveNameChanging(global::System.String value);
        partial void OnArchiveNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_CartItems_Carts", "CartContents")]
        public EntityCollection<CartContent> CartContents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CartContent>("SongSearchModel.FK_CartItems_Carts", "CartContents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CartContent>("SongSearchModel.FK_CartItems_Carts", "CartContents", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearchModel", Name="CartContent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CartContent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CartContent object.
        /// </summary>
        /// <param name="cartId">Initial value of the CartId property.</param>
        /// <param name="contentId">Initial value of the ContentId property.</param>
        /// <param name="addedOn">Initial value of the AddedOn property.</param>
        public static CartContent CreateCartContent(global::System.Int32 cartId, global::System.Int32 contentId, global::System.DateTime addedOn)
        {
            CartContent cartContent = new CartContent();
            cartContent.CartId = cartId;
            cartContent.ContentId = contentId;
            cartContent.AddedOn = addedOn;
            return cartContent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CartId
        {
            get
            {
                return _CartId;
            }
            set
            {
                if (_CartId != value)
                {
                    OnCartIdChanging(value);
                    ReportPropertyChanging("CartId");
                    _CartId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CartId");
                    OnCartIdChanged();
                }
            }
        }
        private global::System.Int32 _CartId;
        partial void OnCartIdChanging(global::System.Int32 value);
        partial void OnCartIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentId
        {
            get
            {
                return _ContentId;
            }
            set
            {
                if (_ContentId != value)
                {
                    OnContentIdChanging(value);
                    ReportPropertyChanging("ContentId");
                    _ContentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentId");
                    OnContentIdChanged();
                }
            }
        }
        private global::System.Int32 _ContentId;
        partial void OnContentIdChanging(global::System.Int32 value);
        partial void OnContentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddedOn
        {
            get
            {
                return _AddedOn;
            }
            set
            {
                OnAddedOnChanging(value);
                ReportPropertyChanging("AddedOn");
                _AddedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedOn");
                OnAddedOnChanged();
            }
        }
        private global::System.DateTime _AddedOn;
        partial void OnAddedOnChanging(global::System.DateTime value);
        partial void OnAddedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_CartContents_Contents", "Contents")]
        public Content Content
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SongSearchModel.FK_CartContents_Contents", "Contents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SongSearchModel.FK_CartContents_Contents", "Contents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Content> ContentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SongSearchModel.FK_CartContents_Contents", "Contents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Content>("SongSearchModel.FK_CartContents_Contents", "Contents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_CartItems_Carts", "Carts")]
        public Cart Cart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cart>("SongSearchModel.FK_CartItems_Carts", "Carts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cart>("SongSearchModel.FK_CartItems_Carts", "Carts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cart> CartReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cart>("SongSearchModel.FK_CartItems_Carts", "Carts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cart>("SongSearchModel.FK_CartItems_Carts", "Carts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearchModel", Name="Catalog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Catalog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Catalog object.
        /// </summary>
        /// <param name="catalogId">Initial value of the CatalogId property.</param>
        /// <param name="catalogName">Initial value of the CatalogName property.</param>
        public static Catalog CreateCatalog(global::System.Int32 catalogId, global::System.String catalogName)
        {
            Catalog catalog = new Catalog();
            catalog.CatalogId = catalogId;
            catalog.CatalogName = catalogName;
            return catalog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CatalogId
        {
            get
            {
                return _CatalogId;
            }
            set
            {
                if (_CatalogId != value)
                {
                    OnCatalogIdChanging(value);
                    ReportPropertyChanging("CatalogId");
                    _CatalogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CatalogId");
                    OnCatalogIdChanged();
                }
            }
        }
        private global::System.Int32 _CatalogId;
        partial void OnCatalogIdChanging(global::System.Int32 value);
        partial void OnCatalogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CatalogName
        {
            get
            {
                return _CatalogName;
            }
            set
            {
                OnCatalogNameChanging(value);
                ReportPropertyChanging("CatalogName");
                _CatalogName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CatalogName");
                OnCatalogNameChanged();
            }
        }
        private global::System.String _CatalogName;
        partial void OnCatalogNameChanging(global::System.String value);
        partial void OnCatalogNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_Contents_Catalogs", "Contents")]
        public EntityCollection<Content> Contents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Content>("SongSearchModel.FK_Contents_Catalogs", "Contents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Content>("SongSearchModel.FK_Contents_Catalogs", "Contents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_UsersCatalogs_Catalogs", "UsersCatalogs")]
        public EntityCollection<UsersCatalog> UsersCatalogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersCatalog>("SongSearchModel.FK_UsersCatalogs_Catalogs", "UsersCatalogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersCatalog>("SongSearchModel.FK_UsersCatalogs_Catalogs", "UsersCatalogs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearchModel", Name="Content")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Content : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Content object.
        /// </summary>
        /// <param name="contentId">Initial value of the ContentId property.</param>
        /// <param name="catalogId">Initial value of the CatalogId property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="lastUpdatedByUserId">Initial value of the LastUpdatedByUserId property.</param>
        /// <param name="lastUpdatedOn">Initial value of the LastUpdatedOn property.</param>
        /// <param name="isControlledAllIn">Initial value of the IsControlledAllIn property.</param>
        /// <param name="hasPreviewAsset">Initial value of the HasPreviewAsset property.</param>
        /// <param name="hasFullAsset">Initial value of the HasFullAsset property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="artist">Initial value of the Artist property.</param>
        public static Content CreateContent(global::System.Int32 contentId, global::System.Int32 catalogId, global::System.Int32 createdByUserId, global::System.DateTime createdOn, global::System.Int32 lastUpdatedByUserId, global::System.DateTime lastUpdatedOn, global::System.Boolean isControlledAllIn, global::System.Boolean hasPreviewAsset, global::System.Boolean hasFullAsset, global::System.String title, global::System.String artist)
        {
            Content content = new Content();
            content.ContentId = contentId;
            content.CatalogId = catalogId;
            content.CreatedByUserId = createdByUserId;
            content.CreatedOn = createdOn;
            content.LastUpdatedByUserId = lastUpdatedByUserId;
            content.LastUpdatedOn = lastUpdatedOn;
            content.IsControlledAllIn = isControlledAllIn;
            content.HasPreviewAsset = hasPreviewAsset;
            content.HasFullAsset = hasFullAsset;
            content.Title = title;
            content.Artist = artist;
            return content;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentId
        {
            get
            {
                return _ContentId;
            }
            set
            {
                if (_ContentId != value)
                {
                    OnContentIdChanging(value);
                    ReportPropertyChanging("ContentId");
                    _ContentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentId");
                    OnContentIdChanged();
                }
            }
        }
        private global::System.Int32 _ContentId;
        partial void OnContentIdChanging(global::System.Int32 value);
        partial void OnContentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CatalogId
        {
            get
            {
                return _CatalogId;
            }
            set
            {
                OnCatalogIdChanging(value);
                ReportPropertyChanging("CatalogId");
                _CatalogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CatalogId");
                OnCatalogIdChanged();
            }
        }
        private global::System.Int32 _CatalogId;
        partial void OnCatalogIdChanging(global::System.Int32 value);
        partial void OnCatalogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastUpdatedByUserId
        {
            get
            {
                return _LastUpdatedByUserId;
            }
            set
            {
                OnLastUpdatedByUserIdChanging(value);
                ReportPropertyChanging("LastUpdatedByUserId");
                _LastUpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedByUserId");
                OnLastUpdatedByUserIdChanged();
            }
        }
        private global::System.Int32 _LastUpdatedByUserId;
        partial void OnLastUpdatedByUserIdChanging(global::System.Int32 value);
        partial void OnLastUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedOn
        {
            get
            {
                return _LastUpdatedOn;
            }
            set
            {
                OnLastUpdatedOnChanging(value);
                ReportPropertyChanging("LastUpdatedOn");
                _LastUpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedOn");
                OnLastUpdatedOnChanged();
            }
        }
        private global::System.DateTime _LastUpdatedOn;
        partial void OnLastUpdatedOnChanging(global::System.DateTime value);
        partial void OnLastUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsControlledAllIn
        {
            get
            {
                return _IsControlledAllIn;
            }
            set
            {
                OnIsControlledAllInChanging(value);
                ReportPropertyChanging("IsControlledAllIn");
                _IsControlledAllIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsControlledAllIn");
                OnIsControlledAllInChanged();
            }
        }
        private global::System.Boolean _IsControlledAllIn;
        partial void OnIsControlledAllInChanging(global::System.Boolean value);
        partial void OnIsControlledAllInChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasPreviewAsset
        {
            get
            {
                return _HasPreviewAsset;
            }
            set
            {
                OnHasPreviewAssetChanging(value);
                ReportPropertyChanging("HasPreviewAsset");
                _HasPreviewAsset = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasPreviewAsset");
                OnHasPreviewAssetChanged();
            }
        }
        private global::System.Boolean _HasPreviewAsset;
        partial void OnHasPreviewAssetChanging(global::System.Boolean value);
        partial void OnHasPreviewAssetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasFullAsset
        {
            get
            {
                return _HasFullAsset;
            }
            set
            {
                OnHasFullAssetChanging(value);
                ReportPropertyChanging("HasFullAsset");
                _HasFullAsset = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasFullAsset");
                OnHasFullAssetChanged();
            }
        }
        private global::System.Boolean _HasFullAsset;
        partial void OnHasFullAssetChanging(global::System.Boolean value);
        partial void OnHasFullAssetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Artist
        {
            get
            {
                return _Artist;
            }
            set
            {
                OnArtistChanging(value);
                ReportPropertyChanging("Artist");
                _Artist = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Artist");
                OnArtistChanged();
            }
        }
        private global::System.String _Artist;
        partial void OnArtistChanging(global::System.String value);
        partial void OnArtistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Writers
        {
            get
            {
                return _Writers;
            }
            set
            {
                OnWritersChanging(value);
                ReportPropertyChanging("Writers");
                _Writers = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Writers");
                OnWritersChanged();
            }
        }
        private global::System.String _Writers;
        partial void OnWritersChanging(global::System.String value);
        partial void OnWritersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PopCharts
        {
            get
            {
                return _PopCharts;
            }
            set
            {
                OnPopChartsChanging(value);
                ReportPropertyChanging("PopCharts");
                _PopCharts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PopCharts");
                OnPopChartsChanged();
            }
        }
        private Nullable<global::System.Int32> _PopCharts;
        partial void OnPopChartsChanging(Nullable<global::System.Int32> value);
        partial void OnPopChartsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryCharts
        {
            get
            {
                return _CountryCharts;
            }
            set
            {
                OnCountryChartsChanging(value);
                ReportPropertyChanging("CountryCharts");
                _CountryCharts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryCharts");
                OnCountryChartsChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryCharts;
        partial void OnCountryChartsChanging(Nullable<global::System.Int32> value);
        partial void OnCountryChartsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReleaseYear
        {
            get
            {
                return _ReleaseYear;
            }
            set
            {
                OnReleaseYearChanging(value);
                ReportPropertyChanging("ReleaseYear");
                _ReleaseYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReleaseYear");
                OnReleaseYearChanged();
            }
        }
        private Nullable<global::System.Int32> _ReleaseYear;
        partial void OnReleaseYearChanging(Nullable<global::System.Int32> value);
        partial void OnReleaseYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecordLabel
        {
            get
            {
                return _RecordLabel;
            }
            set
            {
                OnRecordLabelChanging(value);
                ReportPropertyChanging("RecordLabel");
                _RecordLabel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecordLabel");
                OnRecordLabelChanged();
            }
        }
        private global::System.String _RecordLabel;
        partial void OnRecordLabelChanging(global::System.String value);
        partial void OnRecordLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lyrics
        {
            get
            {
                return _Lyrics;
            }
            set
            {
                OnLyricsChanging(value);
                ReportPropertyChanging("Lyrics");
                _Lyrics = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Lyrics");
                OnLyricsChanged();
            }
        }
        private global::System.String _Lyrics;
        partial void OnLyricsChanging(global::System.String value);
        partial void OnLyricsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Keywords
        {
            get
            {
                return _Keywords;
            }
            set
            {
                OnKeywordsChanging(value);
                ReportPropertyChanging("Keywords");
                _Keywords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Keywords");
                OnKeywordsChanged();
            }
        }
        private global::System.String _Keywords;
        partial void OnKeywordsChanging(global::System.String value);
        partial void OnKeywordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SimilarSongs
        {
            get
            {
                return _SimilarSongs;
            }
            set
            {
                OnSimilarSongsChanging(value);
                ReportPropertyChanging("SimilarSongs");
                _SimilarSongs = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SimilarSongs");
                OnSimilarSongsChanged();
            }
        }
        private global::System.String _SimilarSongs;
        partial void OnSimilarSongsChanging(global::System.String value);
        partial void OnSimilarSongsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_CartContents_Contents", "CartContents")]
        public EntityCollection<CartContent> CartContents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CartContent>("SongSearchModel.FK_CartContents_Contents", "CartContents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CartContent>("SongSearchModel.FK_CartContents_Contents", "CartContents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_Contents_Catalogs", "Catalogs")]
        public Catalog Catalog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catalog>("SongSearchModel.FK_Contents_Catalogs", "Catalogs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catalog>("SongSearchModel.FK_Contents_Catalogs", "Catalogs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Catalog> CatalogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catalog>("SongSearchModel.FK_Contents_Catalogs", "Catalogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Catalog>("SongSearchModel.FK_Contents_Catalogs", "Catalogs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_ContentRights_Contents", "ContentRights")]
        public EntityCollection<ContentRight> ContentRights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentRight>("SongSearchModel.FK_ContentRights_Contents", "ContentRights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentRight>("SongSearchModel.FK_ContentRights_Contents", "ContentRights", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "ContentTags", "Tags")]
        public EntityCollection<Tag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("SongSearchModel.ContentTags", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("SongSearchModel.ContentTags", "Tags", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearchModel", Name="ContentRight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentRight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentRight object.
        /// </summary>
        /// <param name="contentRightId">Initial value of the ContentRightId property.</param>
        /// <param name="contentId">Initial value of the ContentId property.</param>
        /// <param name="rightsTypeId">Initial value of the RightsTypeId property.</param>
        /// <param name="rightsHolderId">Initial value of the RightsHolderId property.</param>
        /// <param name="rightsHolderShare">Initial value of the RightsHolderShare property.</param>
        public static ContentRight CreateContentRight(global::System.Int32 contentRightId, global::System.Int32 contentId, global::System.Int32 rightsTypeId, global::System.Int32 rightsHolderId, global::System.Decimal rightsHolderShare)
        {
            ContentRight contentRight = new ContentRight();
            contentRight.ContentRightId = contentRightId;
            contentRight.ContentId = contentId;
            contentRight.RightsTypeId = rightsTypeId;
            contentRight.RightsHolderId = rightsHolderId;
            contentRight.RightsHolderShare = rightsHolderShare;
            return contentRight;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentRightId
        {
            get
            {
                return _ContentRightId;
            }
            set
            {
                if (_ContentRightId != value)
                {
                    OnContentRightIdChanging(value);
                    ReportPropertyChanging("ContentRightId");
                    _ContentRightId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentRightId");
                    OnContentRightIdChanged();
                }
            }
        }
        private global::System.Int32 _ContentRightId;
        partial void OnContentRightIdChanging(global::System.Int32 value);
        partial void OnContentRightIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentId
        {
            get
            {
                return _ContentId;
            }
            set
            {
                OnContentIdChanging(value);
                ReportPropertyChanging("ContentId");
                _ContentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentId");
                OnContentIdChanged();
            }
        }
        private global::System.Int32 _ContentId;
        partial void OnContentIdChanging(global::System.Int32 value);
        partial void OnContentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RightsTypeId
        {
            get
            {
                return _RightsTypeId;
            }
            set
            {
                OnRightsTypeIdChanging(value);
                ReportPropertyChanging("RightsTypeId");
                _RightsTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RightsTypeId");
                OnRightsTypeIdChanged();
            }
        }
        private global::System.Int32 _RightsTypeId;
        partial void OnRightsTypeIdChanging(global::System.Int32 value);
        partial void OnRightsTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RightsHolderId
        {
            get
            {
                return _RightsHolderId;
            }
            set
            {
                OnRightsHolderIdChanging(value);
                ReportPropertyChanging("RightsHolderId");
                _RightsHolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RightsHolderId");
                OnRightsHolderIdChanged();
            }
        }
        private global::System.Int32 _RightsHolderId;
        partial void OnRightsHolderIdChanging(global::System.Int32 value);
        partial void OnRightsHolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RightsHolderShare
        {
            get
            {
                return _RightsHolderShare;
            }
            set
            {
                OnRightsHolderShareChanging(value);
                ReportPropertyChanging("RightsHolderShare");
                _RightsHolderShare = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RightsHolderShare");
                OnRightsHolderShareChanged();
            }
        }
        private global::System.Decimal _RightsHolderShare;
        partial void OnRightsHolderShareChanging(global::System.Decimal value);
        partial void OnRightsHolderShareChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_ContentRights_Contents", "Contents")]
        public Content Content
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SongSearchModel.FK_ContentRights_Contents", "Contents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SongSearchModel.FK_ContentRights_Contents", "Contents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Content> ContentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SongSearchModel.FK_ContentRights_Contents", "Contents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Content>("SongSearchModel.FK_ContentRights_Contents", "Contents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_ContentRights_RightsHolders", "RightsHolders")]
        public RightsHolder RightsHolder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RightsHolder>("SongSearchModel.FK_ContentRights_RightsHolders", "RightsHolders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RightsHolder>("SongSearchModel.FK_ContentRights_RightsHolders", "RightsHolders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RightsHolder> RightsHolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RightsHolder>("SongSearchModel.FK_ContentRights_RightsHolders", "RightsHolders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RightsHolder>("SongSearchModel.FK_ContentRights_RightsHolders", "RightsHolders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "ContentRightTerritories", "Territories")]
        public EntityCollection<Territory> Territories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Territory>("SongSearchModel.ContentRightTerritories", "Territories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Territory>("SongSearchModel.ContentRightTerritories", "Territories", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearchModel", Name="Invitation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invitation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invitation object.
        /// </summary>
        /// <param name="invitationId">Initial value of the InvitationId property.</param>
        /// <param name="invitationEmailAddress">Initial value of the InvitationEmailAddress property.</param>
        /// <param name="expirationDate">Initial value of the ExpirationDate property.</param>
        /// <param name="invitationStatus">Initial value of the InvitationStatus property.</param>
        /// <param name="invitedByUserId">Initial value of the InvitedByUserId property.</param>
        public static Invitation CreateInvitation(global::System.Guid invitationId, global::System.String invitationEmailAddress, global::System.DateTime expirationDate, global::System.Int16 invitationStatus, global::System.Int32 invitedByUserId)
        {
            Invitation invitation = new Invitation();
            invitation.InvitationId = invitationId;
            invitation.InvitationEmailAddress = invitationEmailAddress;
            invitation.ExpirationDate = expirationDate;
            invitation.InvitationStatus = invitationStatus;
            invitation.InvitedByUserId = invitedByUserId;
            return invitation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InvitationId
        {
            get
            {
                return _InvitationId;
            }
            set
            {
                if (_InvitationId != value)
                {
                    OnInvitationIdChanging(value);
                    ReportPropertyChanging("InvitationId");
                    _InvitationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvitationId");
                    OnInvitationIdChanged();
                }
            }
        }
        private global::System.Guid _InvitationId;
        partial void OnInvitationIdChanging(global::System.Guid value);
        partial void OnInvitationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvitationEmailAddress
        {
            get
            {
                return _InvitationEmailAddress;
            }
            set
            {
                OnInvitationEmailAddressChanging(value);
                ReportPropertyChanging("InvitationEmailAddress");
                _InvitationEmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvitationEmailAddress");
                OnInvitationEmailAddressChanged();
            }
        }
        private global::System.String _InvitationEmailAddress;
        partial void OnInvitationEmailAddressChanging(global::System.String value);
        partial void OnInvitationEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private global::System.DateTime _ExpirationDate;
        partial void OnExpirationDateChanging(global::System.DateTime value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 InvitationStatus
        {
            get
            {
                return _InvitationStatus;
            }
            set
            {
                OnInvitationStatusChanging(value);
                ReportPropertyChanging("InvitationStatus");
                _InvitationStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitationStatus");
                OnInvitationStatusChanged();
            }
        }
        private global::System.Int16 _InvitationStatus;
        partial void OnInvitationStatusChanging(global::System.Int16 value);
        partial void OnInvitationStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvitedByUserId
        {
            get
            {
                return _InvitedByUserId;
            }
            set
            {
                OnInvitedByUserIdChanging(value);
                ReportPropertyChanging("InvitedByUserId");
                _InvitedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitedByUserId");
                OnInvitedByUserIdChanged();
            }
        }
        private global::System.Int32 _InvitedByUserId;
        partial void OnInvitedByUserIdChanging(global::System.Int32 value);
        partial void OnInvitedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_Users_Invitations", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SongSearchModel.FK_Users_Invitations", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SongSearchModel.FK_Users_Invitations", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearchModel", Name="RightsHolder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RightsHolder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RightsHolder object.
        /// </summary>
        /// <param name="rightsHolderId">Initial value of the RightsHolderId property.</param>
        /// <param name="rightsHolderName">Initial value of the RightsHolderName property.</param>
        public static RightsHolder CreateRightsHolder(global::System.Int32 rightsHolderId, global::System.String rightsHolderName)
        {
            RightsHolder rightsHolder = new RightsHolder();
            rightsHolder.RightsHolderId = rightsHolderId;
            rightsHolder.RightsHolderName = rightsHolderName;
            return rightsHolder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RightsHolderId
        {
            get
            {
                return _RightsHolderId;
            }
            set
            {
                if (_RightsHolderId != value)
                {
                    OnRightsHolderIdChanging(value);
                    ReportPropertyChanging("RightsHolderId");
                    _RightsHolderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RightsHolderId");
                    OnRightsHolderIdChanged();
                }
            }
        }
        private global::System.Int32 _RightsHolderId;
        partial void OnRightsHolderIdChanging(global::System.Int32 value);
        partial void OnRightsHolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RightsHolderName
        {
            get
            {
                return _RightsHolderName;
            }
            set
            {
                OnRightsHolderNameChanging(value);
                ReportPropertyChanging("RightsHolderName");
                _RightsHolderName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RightsHolderName");
                OnRightsHolderNameChanged();
            }
        }
        private global::System.String _RightsHolderName;
        partial void OnRightsHolderNameChanging(global::System.String value);
        partial void OnRightsHolderNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_ContentRights_RightsHolders", "ContentRights")]
        public EntityCollection<ContentRight> ContentRights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentRight>("SongSearchModel.FK_ContentRights_RightsHolders", "ContentRights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentRight>("SongSearchModel.FK_ContentRights_RightsHolders", "ContentRights", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearchModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static Role CreateRole(global::System.Int32 roleId, global::System.String roleName)
        {
            Role role = new Role();
            role.RoleId = roleId;
            role.RoleName = roleName;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_Users_Roles", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SongSearchModel.FK_Users_Roles", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SongSearchModel.FK_Users_Roles", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_UsersCatalogs_Roles", "UsersCatalogs")]
        public EntityCollection<UsersCatalog> UsersCatalogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersCatalog>("SongSearchModel.FK_UsersCatalogs_Roles", "UsersCatalogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersCatalog>("SongSearchModel.FK_UsersCatalogs_Roles", "UsersCatalogs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearchModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="tagId">Initial value of the TagId property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        public static Tag CreateTag(global::System.Int32 tagId, global::System.String tagName)
        {
            Tag tag = new Tag();
            tag.TagId = tagId;
            tag.TagName = tagName;
            return tag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                if (_TagId != value)
                {
                    OnTagIdChanging(value);
                    ReportPropertyChanging("TagId");
                    _TagId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TagId");
                    OnTagIdChanged();
                }
            }
        }
        private global::System.Int32 _TagId;
        partial void OnTagIdChanging(global::System.Int32 value);
        partial void OnTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "ContentTags", "Contents")]
        public EntityCollection<Content> Contents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Content>("SongSearchModel.ContentTags", "Contents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Content>("SongSearchModel.ContentTags", "Contents", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearchModel", Name="Territory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Territory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Territory object.
        /// </summary>
        /// <param name="territoryId">Initial value of the TerritoryId property.</param>
        /// <param name="territoryCode">Initial value of the TerritoryCode property.</param>
        /// <param name="territoryName">Initial value of the TerritoryName property.</param>
        public static Territory CreateTerritory(global::System.Int32 territoryId, global::System.String territoryCode, global::System.String territoryName)
        {
            Territory territory = new Territory();
            territory.TerritoryId = territoryId;
            territory.TerritoryCode = territoryCode;
            territory.TerritoryName = territoryName;
            return territory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TerritoryId
        {
            get
            {
                return _TerritoryId;
            }
            set
            {
                if (_TerritoryId != value)
                {
                    OnTerritoryIdChanging(value);
                    ReportPropertyChanging("TerritoryId");
                    _TerritoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TerritoryId");
                    OnTerritoryIdChanged();
                }
            }
        }
        private global::System.Int32 _TerritoryId;
        partial void OnTerritoryIdChanging(global::System.Int32 value);
        partial void OnTerritoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TerritoryCode
        {
            get
            {
                return _TerritoryCode;
            }
            set
            {
                OnTerritoryCodeChanging(value);
                ReportPropertyChanging("TerritoryCode");
                _TerritoryCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TerritoryCode");
                OnTerritoryCodeChanged();
            }
        }
        private global::System.String _TerritoryCode;
        partial void OnTerritoryCodeChanging(global::System.String value);
        partial void OnTerritoryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TerritoryName
        {
            get
            {
                return _TerritoryName;
            }
            set
            {
                OnTerritoryNameChanging(value);
                ReportPropertyChanging("TerritoryName");
                _TerritoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TerritoryName");
                OnTerritoryNameChanged();
            }
        }
        private global::System.String _TerritoryName;
        partial void OnTerritoryNameChanging(global::System.String value);
        partial void OnTerritoryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "ContentRightTerritories", "ContentRights")]
        public EntityCollection<ContentRight> ContentRights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentRight>("SongSearchModel.ContentRightTerritories", "ContentRights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentRight>("SongSearchModel.ContentRightTerritories", "ContentRights", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearchModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="registeredOn">Initial value of the RegisteredOn property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String userName, global::System.String password, global::System.String firstName, global::System.String lastName, global::System.Int32 roleId, global::System.DateTime registeredOn)
        {
            User user = new User();
            user.UserId = userId;
            user.UserName = userName;
            user.Password = password;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.RoleId = roleId;
            user.RegisteredOn = registeredOn;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentUserId
        {
            get
            {
                return _ParentUserId;
            }
            set
            {
                OnParentUserIdChanging(value);
                ReportPropertyChanging("ParentUserId");
                _ParentUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentUserId");
                OnParentUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentUserId;
        partial void OnParentUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> InvitationId
        {
            get
            {
                return _InvitationId;
            }
            set
            {
                OnInvitationIdChanging(value);
                ReportPropertyChanging("InvitationId");
                _InvitationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitationId");
                OnInvitationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _InvitationId;
        partial void OnInvitationIdChanging(Nullable<global::System.Guid> value);
        partial void OnInvitationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegisteredOn
        {
            get
            {
                return _RegisteredOn;
            }
            set
            {
                OnRegisteredOnChanging(value);
                ReportPropertyChanging("RegisteredOn");
                _RegisteredOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegisteredOn");
                OnRegisteredOnChanged();
            }
        }
        private global::System.DateTime _RegisteredOn;
        partial void OnRegisteredOnChanging(global::System.DateTime value);
        partial void OnRegisteredOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Signature
        {
            get
            {
                return _Signature;
            }
            set
            {
                OnSignatureChanging(value);
                ReportPropertyChanging("Signature");
                _Signature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Signature");
                OnSignatureChanged();
            }
        }
        private global::System.String _Signature;
        partial void OnSignatureChanging(global::System.String value);
        partial void OnSignatureChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_Users_Invitations", "Invitations")]
        public Invitation Invitation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invitation>("SongSearchModel.FK_Users_Invitations", "Invitations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invitation>("SongSearchModel.FK_Users_Invitations", "Invitations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invitation> InvitationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invitation>("SongSearchModel.FK_Users_Invitations", "Invitations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invitation>("SongSearchModel.FK_Users_Invitations", "Invitations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_Users_Roles", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SongSearchModel.FK_Users_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SongSearchModel.FK_Users_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SongSearchModel.FK_Users_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("SongSearchModel.FK_Users_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_UsersCatalogs_Users", "UsersCatalogs")]
        public EntityCollection<UsersCatalog> UsersCatalogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersCatalog>("SongSearchModel.FK_UsersCatalogs_Users", "UsersCatalogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersCatalog>("SongSearchModel.FK_UsersCatalogs_Users", "UsersCatalogs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_Users_ParentUsers", "ChildUser")]
        public EntityCollection<User> ParentUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SongSearchModel.FK_Users_ParentUsers", "ChildUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SongSearchModel.FK_Users_ParentUsers", "ChildUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_Users_ParentUsers", "User")]
        public User ChildUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearchModel.FK_Users_ParentUsers", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearchModel.FK_Users_ParentUsers", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ChildUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearchModel.FK_Users_ParentUsers", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SongSearchModel.FK_Users_ParentUsers", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SongSearchModel", Name="UsersCatalog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersCatalog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersCatalog object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="catalogId">Initial value of the CatalogId property.</param>
        /// <param name="territoryId">Initial value of the TerritoryId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static UsersCatalog CreateUsersCatalog(global::System.Int32 userId, global::System.Int32 catalogId, global::System.Int32 territoryId, global::System.Int32 roleId)
        {
            UsersCatalog usersCatalog = new UsersCatalog();
            usersCatalog.UserId = userId;
            usersCatalog.CatalogId = catalogId;
            usersCatalog.TerritoryId = territoryId;
            usersCatalog.RoleId = roleId;
            return usersCatalog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CatalogId
        {
            get
            {
                return _CatalogId;
            }
            set
            {
                if (_CatalogId != value)
                {
                    OnCatalogIdChanging(value);
                    ReportPropertyChanging("CatalogId");
                    _CatalogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CatalogId");
                    OnCatalogIdChanged();
                }
            }
        }
        private global::System.Int32 _CatalogId;
        partial void OnCatalogIdChanging(global::System.Int32 value);
        partial void OnCatalogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TerritoryId
        {
            get
            {
                return _TerritoryId;
            }
            set
            {
                if (_TerritoryId != value)
                {
                    OnTerritoryIdChanging(value);
                    ReportPropertyChanging("TerritoryId");
                    _TerritoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TerritoryId");
                    OnTerritoryIdChanged();
                }
            }
        }
        private global::System.Int32 _TerritoryId;
        partial void OnTerritoryIdChanging(global::System.Int32 value);
        partial void OnTerritoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_UsersCatalogs_Catalogs", "Catalogs")]
        public Catalog Catalog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catalog>("SongSearchModel.FK_UsersCatalogs_Catalogs", "Catalogs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catalog>("SongSearchModel.FK_UsersCatalogs_Catalogs", "Catalogs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Catalog> CatalogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catalog>("SongSearchModel.FK_UsersCatalogs_Catalogs", "Catalogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Catalog>("SongSearchModel.FK_UsersCatalogs_Catalogs", "Catalogs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_UsersCatalogs_Roles", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SongSearchModel.FK_UsersCatalogs_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SongSearchModel.FK_UsersCatalogs_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("SongSearchModel.FK_UsersCatalogs_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("SongSearchModel.FK_UsersCatalogs_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SongSearchModel", "FK_UsersCatalogs_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearchModel.FK_UsersCatalogs_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearchModel.FK_UsersCatalogs_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SongSearchModel.FK_UsersCatalogs_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SongSearchModel.FK_UsersCatalogs_Users", "Users", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
